{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "azureRegion1": {
            "type": "string",
            "defaultValue": "eastus2",
            "metadata": {
                "description": "azure region where is deployed the first hub vnet"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "admin password"
            }
        },
        "natPublicIPPrefixLength": {
            "type": "int",
            "defaultValue": 31,
            "metadata": {
                "description": "Length of public IP prefix for nat gateway"
            },
            "maxValue": 31,
            "minValue": 28
        }
    },
    "variables": {
        "windows": {
            "imagePublisher": "MicrosoftWindowsServer",
            "imageOffer": "WindowsServer",
            "OSVersion": "2016-Datacenter"
        },
        "linux": {
            "imagePublisher": "openlogic",
            "imageOffer": "CentOS",
            "OSVersion": "7.5"
        },
        "vNet": {
            "location": "[parameters('azureRegion1')]",
            "name": "vNet",
            "addressSpacePrefix": "10.0.1.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.1.0/25",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.1.128/25"
        },
        "nsg": {
            "name": "nsg",
            "location": "[variables('vNet').location]"
        },
        "natGatewayName": "natGw",
        "natPublicIPAddressName": "natpip",
        "natPublicIPPrefixName": "nat-ip-prefix",
        "natPublicIPPrefixLength": "[parameters('natPublicIPPrefixLength')]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]",
        "vmsize": {
            "linux": "Standard_B1s",
            "windows": "Standard_D2_v2"
        },
        "vm1": {
            "vmName": "vm1",
            "vmSize": "[variables('vmsize').windows]",
            "imagePublisher": "MicrosoftWindowsServer",
            "imageOffer": "WindowsServer",
            "OSVersion": "2019-Datacenter"
        },
        "vm2": {
            "vmName": "vm2",
            "vmSize": "[variables('vmsize').windows]",
            "imagePublisher": "MicrosoftWindowsServer",
            "imageOffer": "WindowsServer",
            "OSVersion": "2019-Datacenter"
        },
        "vm3": {
            "vmName": "vm3",
            "vmSize": "[variables('vmsize').windows]",
            "imagePublisher": "MicrosoftWindowsServer",
            "imageOffer": "WindowsServer",
            "OSVersion": "2019-Datacenter"
        },
        "vm4": {
            "vmName": "vm4",
            "vmSize": "[variables('vmsize').windows]",
            "imagePublisher": "MicrosoftWindowsServer",
            "imageOffer": "WindowsServer",
            "OSVersion": "2019-Datacenter"
        },
        "vmarray": [
            {
                "location": "[variables('vNet').location]",
                "vmName": "[variables('vm1').vmName]",
                "vmSize": "[variables('vm1').vmSize]",
                "imagePublisher": "[variables('vm1').imagePublisher]",
                "imageOffer": "[variables('vm1').imageOffer]",
                "OSVersion": "[variables('vm1').OSVersion]",
                "VNetName": "[variables('vNet').name]",
                "SubnetName": "[variables('vNet').subnet1Name]",
                "privateIP": "10.0.1.10",
                "ipforwarding": false
            },
            {
                "location": "[variables('vNet').location]",
                "vmName": "[variables('vm2').vmName]",
                "vmSize": "[variables('vm2').vmSize]",
                "imagePublisher": "[variables('vm2').imagePublisher]",
                "imageOffer": "[variables('vm2').imageOffer]",
                "OSVersion": "[variables('vm2').OSVersion]",
                "VNetName": "[variables('vNet').name]",
                "SubnetName": "[variables('vNet').subnet2Name]",
                "privateIP": "10.0.1.150",
                "ipforwarding": false
            },
            {
                "location": "[variables('vNet').location]",
                "vmName": "[variables('vm3').vmName]",
                "vmSize": "[variables('vm3').vmSize]",
                "imagePublisher": "[variables('vm3').imagePublisher]",
                "imageOffer": "[variables('vm3').imageOffer]",
                "OSVersion": "[variables('vm3').OSVersion]",
                "VNetName": "[variables('vNet').name]",
                "SubnetName": "[variables('vNet').subnet1Name]",
                "privateIP": "10.0.1.20",
                "ipforwarding": false
            },
            {
                "location": "[variables('vNet').location]",
                "vmName": "[variables('vm4').vmName]",
                "vmSize": "[variables('vm4').vmSize]",
                "imagePublisher": "[variables('vm4').imagePublisher]",
                "imageOffer": "[variables('vm4').imageOffer]",
                "OSVersion": "[variables('vm4').OSVersion]",
                "VNetName": "[variables('vNet').name]",
                "SubnetName": "[variables('vNet').subnet1Name]",
                "privateIP": "10.0.1.30",
                "ipforwarding": false
            }
        ],
        "vmCount": "[length(variables('vmArray'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsg').name]",
            "apiVersion": "2019-11-01",
            "location": "[variables('nsg').location]",
            "comments": "Create the Network Security Group",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "RDP-rule",
                        "properties": {
                            "description": "allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('natPublicIPAddressName')]",
            "location": "[variables('vNet').location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/publicIPPrefixes",
            "apiVersion": "2018-07-01",
            "name": "[variables('natPublicIPPrefixName')]",
            "location": "[variables('vNet').location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "prefixLength": "[parameters('natPublicIPPrefixLength')]",
                "publicIPAddressVersion": "IPv4"
            }
        },
        {
            "type": "Microsoft.Network/natGateways",
            "apiVersion": "2019-11-01",
            "name": "[variables('natGatewayName')]",
            "location": "[variables('vNet').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('natPublicIPAddressName'))]",
                "[resourceId('Microsoft.Network/publicIPPrefixes', variables('natPublicIPPrefixName'))]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddresses": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('natPublicIPAddressName'))]"
                    }
                ],
                "publicIPPrefixes": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicIPPrefixes', variables('natPublicIPPrefixName'))]"
                    }
                ],
                "idleTimeoutInMinutes": 10
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet').name]",
            "apiVersion": "2019-11-01",
            "location": "[variables('vNet').location]",
            "comments": "Create the Azure vNet",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg').name)]",
                "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet').subnet1Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg').name)]"
                            },
                            "natGateway": {
                                "id": "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('vNet').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet').subnet2Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg').name)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-pubIP')]",
            "apiVersion": "2019-11-01",
            "comments": "Public IP address VMs",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "copy": {
                "name": "publicIpCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )]",
            "apiVersion": "2019-11-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('vmArray')[copyIndex()].vmName,'-pubIP' )]",
                "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vmArray')[copyIndex()].VNetName))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('vmArray')[copyIndex()].privateIP]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat( variables('vmArray')[copyIndex()].vmName,'-pubIP' )  )]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vmArray')[copyIndex()].VNetName),'/subnets/', variables('vmArray')[copyIndex()].SubnetName)]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].ipforwarding]"
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion": "2019-07-01",
            "comments": "Create multiple VMs in a loop on VMArray",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmArray')[copyIndex()].vmName,'-NIC')  )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].imagePublisher]",
                        "offer": "[variables('vmArray')[copyIndex()].imageOffer]",
                        "sku": "[variables('vmArray')[copyIndex()].OSVersion]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-OS')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )  )]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            }
        }
    ]
}