{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "eh",
      "metadata": {
        "description": "Specifies a project name that is used to generate the Event Hub name and the Namespace name."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the Azure location for all resources."
      }
    },
    "eventHubSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [ "Basic", "Standard" ],
      "metadata": {
        "description": "Specifies the messaging tier for Event Hub Namespace."
      }
    },
    "ipFilterRuleName": {
      "type": "string",
      "defaultValue": "filter-ns",
      "metadata": {
        "description": "IP firewall rules are applied at the Event Hubs namespace level to restrict access to specific IPs/networks."
      }
    },
    "ipFilterAction": {
      "type": "string",
      "defaultValue": "Accept",
      "allowedValues": [ "Reject", "Accept" ],
      "metadata": {
        "description": "action in the IP firewall rule"
      }
    },
    "IpMask": {
      "type": "string",
      "metadata": {
        "description": "network prefix, includive of subnetmask to set in the IP firewall rule"
      }
    },
    "partitionCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 32,
      "metadata": {
        "description": "Number of partitions chosen"
      }
    }
  },
  "variables": {
    "eventHubNamespaceName": "[tolower(concat( parameters('projectName'),'-ns-', uniqueString(resourceGroup().id) ))]",
    "eventHubName": "[parameters('projectName')]",
    "partitionCount": "[parameters('partitionCount')]"
  },
  "resources": [
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2021-01-01-preview",
      "name": "[variables('eventHubNamespaceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('eventHubSku')]",
        "tier": "[parameters('eventHubSku')]",
        "capacity": 1
      },
      "properties": {
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/IPFilterRules",
      "apiVersion": "2018-01-01-preview",
      "name": "[concat(variables('eventHubNamespaceName'), '/', parameters('ipFilterRuleName'))]",

      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/', variables('eventHubNamespaceName'))]"
      ],
      "properties": {
        "FilterName": "[parameters('ipFilterRuleName')]",
        "Action": "[parameters('ipFilterAction')]",
        "IpMask": "[parameters('IpMask')]"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2021-01-01-preview",
      "name": "[concat(variables('eventHubNamespaceName'), '/', variables('eventHubName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": "[variables('partitionCount')]"
      }
    }
  ]
}