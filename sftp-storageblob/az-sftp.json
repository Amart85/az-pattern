{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[concat('storg', uniquestring(resourceGroup().id))]",
            "metadata": {
                "description": "Storage Account Name"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "allowedValues": [
                "northcentralus",
                "eastus2",
                "eastus2euap",
                "centralus",
                "canadaeast",
                "canadacentral",
                "northeurope",
                "australiaeast",
                "switzerlandnorth",
                "germanywestcentral",
                "eastasia",
                "francecentral"
            ],
            "metadata": {
                "description": "Azure region"
            }
        },
        "userName": {
            "type": "string",
            "metadata": {
                "description": "Username of primary user"
            }
        },
        "homeDirectory": {
            "type": "string",
            "defaultValue": "home",
            "metadata": {
                "description": "Home directory of primary user. Should be a container."
            }
        },
        "publicKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH Public Key for primary user. If not specified, Azure will generate a password which can be accessed securely"
            }
        },
        "blobStorageAccountPrivateEndpointName": {
            "type": "string",
            "defaultValue": "BlobStoragePrivEndpoint",
            "metadata": {
                "description": "Specifies the name of the private link to the boot diagnostics storage account."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "admin password for the VMs"
            }
        },
        "bastionHostsName": {
            "defaultValue": "bastion1",
            "type": "string"
        },
        "vmstorageAccountType": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The storage account type for the disks of the VM"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2ms",
            "metadata": {
                "description": "SKU Azure VM"
            }
        }
    },
    "variables": {
        "blobPublicDNSZoneForwarder": "[concat('.blob.', environment().suffixes.storage)]",
        "blobPrivateDnsZoneName": "[concat('privatelink', variables('blobPublicDNSZoneForwarder'))]",
        "blobPrivateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateDnsZoneName'))]",
        "blobStorageAccountPrivateEndpointId": "[resourceId('Microsoft.Network/privateEndpoints', parameters('blobStorageAccountPrivateEndpointName'))]",
        "blobStorageAccountPrivateEndpointGroupName": "blob",
        "blobPrivateDnsZoneGroup": "[concat(parameters('blobStorageAccountPrivateEndpointName'),'/', variables('blobStorageAccountPrivateEndpointGroupName'), 'PrivateDnsZoneGroup')]",
        "vNet1": {
            "location": "[parameters('location')]",
            "name": "vnet1",
            "addressSpacePrefix": "10.0.0.0/24",
            "subnet1Name": "clientSubnet",
            "subnet1Prefix": "10.0.0.0/28",
            "subnet2Name": "PrivateEndpointSubnet",
            "subnet2Prefix": "10.0.0.32/28",
            "subnet3Name": "AzureBastionSubnet",
            "subnet3Prefix": "10.0.0.192/26"
        },
        "bastion": {
            "name": "[parameters('bastionHostsName')]",
            "location": "[variables('vNet1').location]",
            "pubIP": "[concat(variables('bastionHostsName'),'-pubIP')]"
        },
        "bastionHostsName": "[parameters('bastionHostsName')]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]",

        "vm1Name": "client1",
        "vm2Name": "client2",
        "vm1privIP": "10.0.0.10",
        "vm2privIP": "10.0.0.11",
        "vm1pipObject": {
            "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',concat( variables('vm1Name'),'-pubIP' )  )]"
        },
        "vm2pipObject": "",
        "vm1nsgObject": {
            "id": "[resourceId( 'Microsoft.Network/networkSecurityGroups',concat( variables('vm1Name'),'-nsg' )  )]"
        },
        "vm2nsgObject": "",

        "vmArray": [
            {
                "location": "[variables('vNet1').location]",
                "vmName": "[variables('vm1Name')]",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2022-datacenter-azure-edition",
                "vNetName": "[variables('vNet1').name]",
                "subnetName": "[variables('vNet1').subnet1Name]",
                "pipObject": "[variables('vm1pipObject')]",
                "nsgObject": "[variables('vm1nsgObject') ]",
                "privIP": "[variables('vm1privIP')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false
            },
            {
                "location": "[variables('vNet1').location]",
                "vmName": "[variables('vm2Name')]",
                "vmSize": "[parameters('vmsize')]",
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2022-datacenter-azure-edition",
                "vNetName": "[variables('vNet1').name]",
                "subnetName": "[variables('vNet1').subnet1Name]",
                "pipObject": "[variables('vm2pipObject')]",
                "nsgObject": "[variables('vm2nsgObject') ]",
                "privIP": "[variables('vm2privIP')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false
            }
        ],
        "vmCount": "[length(variables('vmArray'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "publicNetworkAccess": "Disabled",
                "isLocalUserEnabled": true,
                "isSftpEnabled": true,
                "isHnsEnabled": true,
                "networkAcls": {
                    "resourceAccessRules": [],
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },
                 "supportsHttpsTrafficOnly": true,
                 "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('homeDirectory'))]",
            "properties": {
                "publicAccess": "None"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/localUsers",
            "apiVersion": "2021-04-01",
            "name": "[format('{0}/{1}', parameters('storageAccountName'), parameters('userName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "permissionScopes": [
                    {
                        "permissions": "rcwdl",
                        "service": "blob",
                        "resourceName": "[parameters('homeDirectory')]"
                    }
                ],
                "hasSharedKey": true,
                "hasSshKey": false,
                "hasSshPassword": true,
                "homeDirectory": "[parameters('homeDirectory')]",
                "sshAuthorizedKeys": "[if(empty(parameters('publicKey')), null(), createArray(createObject('description', format('{0} public key', parameters('userName')), 'key', parameters('publicKey'))))]"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('blobPrivateDnsZoneName')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(variables('blobPrivateDnsZoneName'), '/link_to_', toLower(variables('vNet1').name))]",
            "location": "global",
            "dependsOn": [
                "[variables('blobPrivateDnsZoneId')]",
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet1').name)]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet1').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-04-01",
            "name": "[parameters('blobStorageAccountPrivateEndpointName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet1').name)]",
                "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName'))]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('blobStorageAccountPrivateEndpointName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName'))]",
                            "groupIds": [
                                "[variables('blobStorageAccountPrivateEndpointGroupName')]"
                            ]
                        }
                    }
                ],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet1').name,variables('vNet1').subnet2Name)]"
                },
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat(parameters('storageAccountName'), variables('blobPublicDNSZoneForwarder'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[variables('blobPrivateDnsZoneGroup')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('blobPrivateDnsZoneId')]",
                "[variables('blobStorageAccountPrivateEndpointId')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "dnsConfig",
                        "properties": {
                            "privateDnsZoneId": "[variables('blobPrivateDnsZoneId')]"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[greater(length(variables('vmArray')[copyIndex()].nsgObject), 0)]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-nsg')]",
            "apiVersion": "2020-11-01",
            "location": "[variables('vNet1').location]",
            "comments": "NSG applied to the subnets in VNet1",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "RDP-rule",
                        "properties": {
                            "description": "allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 600,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "copy": {
                "name": "nsgCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet1').name]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vNet1').location]",
            "comments": "vNet1",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet1').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet1').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnet1Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vNet1').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnet2Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vNet1').subnet3Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnet3Prefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2021-05-01",
            "name": "[variables('bastion').pubIP]",
            "location": "[variables('bastion').location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2021-05-01",
            "name": "[variables('bastion').name]",
            "location": "[variables('bastion').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastion').pubIP )]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1').name )]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "disableCopyPaste": false,
                "enableFileCopy": true,
                "enableIpConnect": false,
                "enableShareableLink": false,
                "enableTunneling": true,
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastion').pubIP)]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNet1').name, 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "condition": "[greater(length(variables('vmArray')[copyIndex()].pipObject), 0)]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-pubIP')]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "copy": {
                "name": "publicIpCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-nic' )]",
            "apiVersion": "2020-11-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vmArray')[copyIndex()].vNetName )]",
                "publicIpCopy",
                "nsgCopy"
            ],
            "properties": {
                "primary": true,
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].enableIPForwarding]",
                "enableAcceleratedNetworking": "[variables('vmArray')[copyIndex()].acceleratedNetworking]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('vmArray')[copyIndex()].privIP]",
                            "publicIPAddress": "[if( greater(length(variables('vmArray')[copyIndex()].pipObject), 0), variables('vmArray')[copyIndex()].pipObject, json('null') )]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vmArray')[copyIndex()].vNetName, variables('vmArray')[copyIndex()].subnetName)]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": "[if( greater(length(variables('vmArray')[copyIndex()].nsgObject), 0), variables('vmArray')[copyIndex()].nsgObject, json('null') )]"
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion": "2021-11-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmArray')[copyIndex()].vmName,'-nic')  )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].publisher]",
                        "offer": "[variables('vmArray')[copyIndex()].offer]",
                        "sku": "[variables('vmArray')[copyIndex()].sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName, '-OSdisk')]",
                        "managedDisk": {
                            "storageAccountType": "[parameters('vmStorageAccountType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('vmArray')[copyIndex()].vmName,'-nic' )  )]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            }
        }
    ],
    "outputs": {
        "storageAccount": {
            "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01', 'Full')]",
            "type": "object"
        }
    }
}