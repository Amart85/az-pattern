{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "locationhub": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Name of the location of hub vnet"
            }
        },
        "locationspokes": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Name of the location of the spoke vnets"
            }
        },
        "numSpokes": {
            "type": "int",
            "defaultValue": 203,
            "minValue": 1,
            "maxValue": 249,
            "metadata": {
                "description": "number of spoke vnets"
            }
        }
    },
    "variables": {
        "vnethubName": "hub",
        "vnethub1": {
            "Name": "[variables('vnethubName')]",
            "location": "[parameters('locationhub')]",
            "addressPrefix": "10.10.0.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.10.0.0/26",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.10.0.64/26",
            "subnet3Name": "subnet3",
            "subnet3Prefix": "10.10.0.128/26",
            "subnet4Name": "GatewaySubnet",
            "subnet4Prefix": "10.10.0.192/26"
        },
        "firstOctet": 10,
        "secondOctet": 0,
        "thirdOctet": 0,
        "numSpokes": "[parameters('numspokes')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat('spoke-', padleft(string( add(variables('secondOctet'),div(copyIndex(),256 )) ), 3,'0'),'-', padleft( string(mod(copyIndex(),256)), 3,'0')   ) ]",
            "apiVersion": "2020-11-01",
            "location": "[parameters('locationspokes')]",
            "comments": "Create Spoke VNets",
            "tags": {
                "Environment": "[concat('PROD-',padleft(string( add(variables('secondOctet'),div(copyIndex(),256 )) ), 3,'0'),'-', padleft( string(mod(copyIndex(),256)), 3,'0') )]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[concat(string(variables('firstOctet')),'.', string( add(variables('secondOctet'),div(copyIndex(),256)) ),'.', string(add(variables('thirdOctet'),mod(copyIndex(),256))), '.0/24' )]"
                    ]

                },
                "subnets": [
                    {
                        "name": "subnet1",
                        "properties": {
                            "addressPrefix": "[concat(string(variables('firstOctet')),'.', string( add(variables('secondOctet'),div(copyIndex(),256)) ),'.', string(add(variables('thirdOctet'),mod(copyIndex(),256))), '.0/26' )]"
                        }
                    },
                    {
                        "name": "subnet2",
                        "properties": {
                            "addressPrefix": "[concat(string(variables('firstOctet')),'.', string( add(variables('secondOctet'),div(copyIndex(),256)) ),'.', string(add(variables('thirdOctet'),mod(copyIndex(),256))), '.64/26' )]"
                        }
                    },
                    {
                        "name": "subnet3",
                        "properties": {
                            "addressPrefix": "[concat(string(variables('firstOctet')),'.', string( add(variables('secondOctet'),div(copyIndex(),256)) ),'.', string(add(variables('thirdOctet'),mod(copyIndex(),256))), '.128/26' )]"
                        }
                    },
                    {
                        "name": "subnet4",
                        "properties": {
                            "addressPrefix": "[concat(string(variables('firstOctet')),'.', string( add(variables('secondOctet'),div(copyIndex(),256)) ),'.', string(add(variables('thirdOctet'),mod(copyIndex(),256))), '.192/26' )]"
                        }
                    }
                ]
            },
            "copy": {
                "name": "vnetSpokeCopy",
                "count": "[variables('numSpokes')]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnethub1').name]",
            "apiVersion": "2020-11-01",
            "location": "[variables('vnethub1').location]",
            "comments": "Create hub VNet",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnethub1').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnethub1').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnethub1').subnet1Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnethub1').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnethub1').subnet2Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnethub1').subnet3Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnethub1').subnet3Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnethub1').subnet4Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnethub1').subnet4Prefix]"
                        }
                    }
                ]
            }
        }
    ]
}
