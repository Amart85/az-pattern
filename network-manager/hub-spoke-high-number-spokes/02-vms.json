{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "mngIP": {
            "type": "string",
            "metadata": {
                "description": "management IP"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "admin password for the VMs"
            }
        },
        "locationhub": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "azure region where is deployed the first VNet"
            }
        },
        "locationspokes": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "azure region where is deployed the first VNet"
            }
        }
    },
    "variables": {
        "firstOctet": 10,
        "secondOctet": 0,
        "thirdOctet": 0,

        "vnethubName": "hub",
        "vmhubName": "vmhub",
        "vnet1Idx": 25,
        "vnet2Idx": 50,
        "vnet3Idx": 75,
        "vnet4Idx": 100,

        "vm1Name": "[concat('vmspoke-', padleft(string( add(variables('secondOctet'),div(variables('vnet1Idx'),256 )) ), 3,'0'),'-', padleft( string(mod(variables('vnet1Idx'),256)), 3,'0')   ) ]",
        "vm2Name": "[concat('vmspoke-', padleft(string( add(variables('secondOctet'),div(variables('vnet2Idx'),256 )) ), 3,'0'),'-', padleft( string(mod(variables('vnet2Idx'),256)), 3,'0')   ) ]",
        "vm3Name": "[concat('vmspoke-', padleft(string( add(variables('secondOctet'),div(variables('vnet3Idx'),256 )) ), 3,'0'),'-', padleft( string(mod(variables('vnet3Idx'),256)), 3,'0')   ) ]",
        "vm4Name": "[concat('vmspoke-', padleft(string( add(variables('secondOctet'),div(variables('vnet4Idx'),256 )) ), 3,'0'),'-', padleft( string(mod(variables('vnet4Idx'),256)), 3,'0')   ) ]",

        "vm1VNetName": "[concat('spoke-', padleft(string( add(variables('secondOctet'),div(variables('vnet1Idx'),256 )) ), 3,'0'),'-', padleft( string(mod(variables('vnet1Idx'),256)), 3,'0')   ) ]",
        "vm2VNetName": "[concat('spoke-', padleft(string( add(variables('secondOctet'),div(variables('vnet2Idx'),256 )) ), 3,'0'),'-', padleft( string(mod(variables('vnet2Idx'),256)), 3,'0')   ) ]",
        "vm3VNetName": "[concat('spoke-', padleft(string( add(variables('secondOctet'),div(variables('vnet3Idx'),256 )) ), 3,'0'),'-', padleft( string(mod(variables('vnet3Idx'),256)), 3,'0')   ) ]",
        "vm4VNetName": "[concat('spoke-', padleft(string( add(variables('secondOctet'),div(variables('vnet4Idx'),256 )) ), 3,'0'),'-', padleft( string(mod(variables('vnet4Idx'),256)), 3,'0')   ) ]",

        "vmsize": "Standard_B1s",
        "vmArray": [
            {
                "deployment": true,
                "location": "[parameters('locationhub')]",
                "vmName": "[variables('vmhubName')]",
                "vmSize": "[variables('vmSize')]",
                "imagePublisher": "canonical",
                "imageOffer": "0001-com-ubuntu-server-focal",
                "OSVersion": "20_04-lts",
                "vNetName": "[variables('vnethubName')]",
                "subnetName": "subnet1",
                "pipObject": {
                    "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',concat( variables('vmhubName'),'-pubIP' )  )]"
                },
                "nsgName": "[concat(variables('vmhubName'),'-nsg')]",
                "enableIPForwarding": true,
                "acceleratedNetworking": false
            },
            {
                "deployment": true,
                "location": "[parameters('locationspokes')]",
                "vmName": "[variables('vm1Name')]",
                "vmSize": "[variables('vmSize')]",
                "imagePublisher": "canonical",
                "imageOffer": "0001-com-ubuntu-server-focal",
                "OSVersion": "20_04-lts",
                "vNetName": "[variables('vm1VNetName')]",
                "subnetName": "subnet1",
                "pipObject": {
                    "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',concat( variables('vm1Name'),'-pubIP' )  )]"
                },
                "nsgName": "[concat(variables('vm1Name'),'-nsg')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false
            },
            {
                "deployment": true,
                "location": "[parameters('locationspokes')]",
                "vmName": "[variables('vm2Name')]",
                "vmSize": "[variables('vmSize')]",
                "imagePublisher": "canonical",
                "imageOffer": "0001-com-ubuntu-server-focal",
                "OSVersion": "20_04-lts",
                "vNetName": "[variables('vm2VNetName')]",
                "subnetName": "subnet1",
                "pipObject": {
                    "id": "[resourceId(  'Microsoft.Network/publicIPAddresses',concat( variables('vm2Name'),'-pubIP' )  )]"
                },
                "nsgName": "[concat(variables('vm2Name'),'-nsg')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false
            },
            {
                "deployment": true,
                "location": "[parameters('locationspokes')]",
                "vmName": "[variables('vm3Name')]",
                "vmSize": "[variables('vmSize')]",
                "imagePublisher": "canonical",
                "imageOffer": "0001-com-ubuntu-server-focal",
                "OSVersion": "20_04-lts",
                "vNetName": "[variables('vm3VNetName')]",
                "subnetName": "subnet1",
                "pipObject": {
                    "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',concat( variables('vm3Name'),'-pubIP' )  )]"
                },
                "nsgName": "[concat(variables('vm3Name'),'-nsg')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false
            },
            {
                "deployment": true,
                "location": "[parameters('locationspokes')]",
                "vmName": "[variables('vm4Name')]",
                "vmSize": "[variables('vmSize')]",
                "imagePublisher": "canonical",
                "imageOffer": "0001-com-ubuntu-server-focal",
                "OSVersion": "20_04-lts",
                "vNetName": "[variables('vm4VNetName')]",
                "subnetName": "subnet1",
                "pipObject": {
                    "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',concat( variables('vm4Name'),'-pubIP' )  )]"
                },
                "nsgName": "[concat(variables('vm4Name'),'-nsg')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false
            }
        ],
        "vmCount": "[length(variables('vmArray'))]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]"
    },
    "resources": [
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('vmArray')[copyIndex()].nsgName)]",
            "apiVersion": "2021-05-01",
            "location": "[concat(variables('vmArray')[copyIndex()].location)]",
            "dependsOn": [],
            "copy": {
                "name": "vmCopy",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[if(equals(parameters('mngIP'), ''), '*', parameters('mngIP'))]",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[and(variables('vmArray')[copyIndex()].deployment, greater(length(variables('vmArray')[copyIndex()].pipObject), 0))]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2021-05-01",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-pubIP')]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [],
            "copy": {
                "name": "vmCopy",
                "count": "[variables('vmCount')]"
            },
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vmArray')[copyIndex()].vmName,'-pubIP') )]",
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName )]"
            ],
            "copy": {
                "name": "vmCopy",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "primary": true,
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].enableIPForwarding]",
                "enableAcceleratedNetworking": "[variables('vmArray')[copyIndex()].acceleratedNetworking]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": "[if( greater(length(variables('vmArray')[copyIndex()].pipObject), 0), variables('vmArray')[copyIndex()].pipObject, json('null') )]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vmArray')[copyIndex()].vNetName, variables('vmArray')[copyIndex()].subnetName)]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName )]"
                }
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion": "2021-07-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmArray')[copyIndex()].vmName,'-NIC')  )]"
            ],
            "copy": {
                "name": "vmCopy",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].imagePublisher]",
                        "offer": "[variables('vmArray')[copyIndex()].imageOffer]",
                        "sku": "[variables('vmArray')[copyIndex()].OSVersion]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-OsDisk')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )  )]"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {}
}
