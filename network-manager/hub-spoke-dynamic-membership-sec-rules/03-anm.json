{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subscriptions": {
            "type": "array",
            "defaultValue": [
                "[concat('/subscriptions/',subscription().subscriptionId)]"
            ],
            "metadata": {
                "description": "subscription array"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all Network Manager."
            }
        },
        "networkManagerName": {
            "type": "string",
            "defaultValue": "ntw-mgr1",
            "metadata": {
                "description": "The name for Network Manager"
            }
        },
        "networkConnenctivtyConfigurationName": {
            "type": "string",
            "defaultValue": "netcfg1",
            "metadata": {
                "description": "network connectivty configuration"
            }
        },
         "securityConfigurationName": {
            "type": "string",
            "defaultValue": "seccfg1",
            "metadata": {
                "description": "network connectivty configuration"
            }
        },
        "resourceGroupNameHubVNet": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "name of the resource group with deployment of vnet1"
            }
        },
        "hubvnetName": {
            "type": "string",
            "defaultValue": "hubvnet",
            "metadata": {
                "description": "name of the  hub vnet"
            }
        },
        "resourceGroupNameVNet1": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "name of the resource group with deployment of vnet1"
            }
        },
        "vnet1Name": {
            "type": "string",
            "defaultValue": "vnet1",
            "metadata": {
                "description": "name of the  vnet1"
            }
        },
        "resourceGroupNameVNet2": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "name of the resource group with deployment of vnet2"
            }
        },
        "vnet2Name": {
            "type": "string",
            "defaultValue": "vnet2",
            "metadata": {
                "description": "name of the  vnet2"
            }
        },
        "resourceGroupNameVNet3": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "name of the resource group with deployment of vnet3"
            }
        },
        "vnet3Name": {
            "type": "string",
            "defaultValue": "vnet3",
            "metadata": {
                "description": "name of the  vnet3"
            }
        },
        "resourceGroupNameVNet4": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "name of the resource group with deployment of vnet4"
            }
        },
        "vnet4Name": {
            "type": "string",
            "defaultValue": "vnet4",
            "metadata": {
                "description": "name of the  vnet4"
            }
        },
        "networkGroup1Name": {
            "type": "string",
            "defaultValue": "grp1",
            "metadata": {
                "description": "The name for Network Manager"
            }
        },
        "networkGroup2Name": {
            "type": "string",
            "defaultValue": "grp2",
            "metadata": {
                "description": "The name for Network Manager"
            }
        }

    },
    "variables": {
        "empty": [],
        "hubvnet": {
            "resourceGroupName": "[parameters('resourceGroupNameHubVNet')]",
            "name": "[parameters('hubvnetName')]"
        },
        "vnet1": {
            "resourceGroupName": "[parameters('resourceGroupNameVNet1')]",
            "name": "[parameters('vnet1Name')]"
        },
        "vnet2": {
            "resourceGroupName": "[parameters('resourceGroupNameVNet2')]",
            "name": "[parameters('vnet2Name')]"
        },
        "vnet3": {
            "resourceGroupName": "[parameters('resourceGroupNameVNet3')]",
            "name": "[parameters('vnet3Name')]"
        },
        "vnet4": {
            "resourceGroupName": "[parameters('resourceGroupNameVNet4')]",
            "name": "[parameters('vnet4Name')]"
        },
        "conditionalMembership1": "{ 
            \"allOf\": [
                {
                   \"field\": \"tags['Environment']\",
                   \"exists\": true
                },
                {
                    \"field\": \"tags['Environment']\",
                    \"contains\": \"PROD\" 
                }
            ]
        }",
        "conditionalMembership2": "{ 
            \"allOf\": [
                {
                   \"field\": \"tags['Environment']\",
                   \"exists\": true
                },
                {
                    \"field\": \"tags['Environment']\",
                    \"contains\": \"DEV\" 
                }
            ]
        }",
        "ruleCollection1Name": "ruleCollection1"
    },
    "resources": [
        {
            "name": "[parameters('networkManagerName')]",
            "type": "Microsoft.Network/networkManagers",
            "apiVersion": "2021-02-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "displayName": "[parameters('networkManagerName')]",
                "description": "basic Network Manager",
                "networkManagerScopes": {
                    "subscriptions": "[if(not(empty(parameters('subscriptions'))), parameters('subscriptions'), variables('empty'))]"
                },
                "networkManagerScopeAccesses": [
                    "Connectivity",
                    "SecurityAdmin"
                ]
            }
        },
        {
            "name": "[concat(parameters('networkManagerName'), '/', parameters('networkGroup1Name'))]",
            "type": "Microsoft.Network/networkManagers/networkGroups",
            "apiVersion": "2021-02-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkManagers', parameters('networkManagerName'))]"
            ],
            "properties": {
                "displayName": "[parameters('networkGroup1Name')]",
                "description": "network group1",
                "groupMembers": [],
                "conditionalMembership": "[variables('conditionalMembership1')]"
            }
        },
        {
            "name": "[concat(parameters('networkManagerName'), '/', parameters('networkGroup2Name'))]",
            "type": "Microsoft.Network/networkManagers/networkGroups",
            "apiVersion": "2021-02-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkManagers', parameters('networkManagerName'))]"
            ],
            "properties": {
                "displayName": "[parameters('networkGroup2Name')]",
                "description": "network group 2",
                "groupMembers": [],
                "conditionalMembership": "[variables('conditionalMembership2')]"
            }
        },
        {
            "type": "Microsoft.Network/networkManagers/connectivityConfigurations",
            "name": "[concat(parameters('networkManagerName'), '/', parameters('networkConnenctivtyConfigurationName'))]",
            "apiVersion": "2021-02-01-preview",
            "dependsOn": [
                "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/networkManagers/networkGroups', parameters('networkManagerName'),parameters('networkGroup1Name'))]",
                "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/networkManagers/networkGroups', parameters('networkManagerName'),parameters('networkGroup2Name'))]"
            ],
            "properties": {
                "displayName": "myConnectivityConfig",
                "description": "configuration hub-and-spoke",
                "connectivityTopology": "HubAndSpoke",
                "hubs": [
                    {
                        "resourceId": "[resourceId(subscription().subscriptionId, variables('hubvnet').resourceGroupName,'Microsoft.Network/virtualNetworks',variables('hubvnet').name)]",
                        "resourceType": "Microsoft.Network/virtualNetworks"
                    }
                ],
                "isGlobal": "True",
                "deleteExistingPeering": "True",
                "appliesToGroups": [
                    {
                        "networkGroupId": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/networkManagers/networkGroups', parameters('networkManagerName'),parameters('networkGroup1Name'))]",
                        "useHubGateway": true,
                        "groupConnectivity": "DirectlyConnected",
                        "isGlobal": "True"
                    },
                    {
                        "networkGroupId": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/networkManagers/networkGroups', parameters('networkManagerName'),parameters('networkGroup2Name'))]",
                        "useHubGateway": true,
                        "groupConnectivity": "DirectlyConnected",
                        "isGlobal": "True"
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('networkManagerName'), '/', parameters('securityConfigurationName'))]",
            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations",
            "apiVersion": "2021-02-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkManagers', parameters('networkManagerName'))]",
                "[resourceId('Microsoft.Network/networkManagers/connectivityConfigurations',parameters('networkManagerName'),parameters('networkConnenctivtyConfigurationName'))]"
            ],
            "properties": {
                "displayName": "[parameters('securityConfigurationName')]",
                "description": "network security config 1"
            }
        },
        {
            "name": "[concat(parameters('networkManagerName'), '/', parameters('securityConfigurationName'),'/',variables('ruleCollection1Name'))]",
            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections",
            "apiVersion": "2021-02-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations', parameters('networkManagerName'),parameters('securityConfigurationName'))]"
            ],
            "properties": {
                "appliesToGroups": [
                    {
                        "networkGroupId": "[resourceId('Microsoft.Network/networkManagers/networkGroups',parameters('networkManagerName'),parameters('networkGroup2Name'))]"
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('networkManagerName'), '/', parameters('securityConfigurationName'),'/',variables('ruleCollection1Name'),'/','SSH')]",
            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules",
            "apiVersion": "2021-02-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkManagers/networkGroups', parameters('networkManagerName'), parameters('networkGroup1Name'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations', parameters('networkManagerName'), parameters('securityConfigurationName'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections', parameters('networkManagerName'), parameters('securityConfigurationName'), variables('ruleCollection1Name'))]"
            ],
            "kind": "Custom",
            "properties": {
                "access": "Allow",
                "description": "access in SSH",
                "displayName": "allow access in SSH",
                "priority": 10,
                "direction": "Inbound",
                "protocol": "Any",
                "sources": [
                    {
                        "addressPrefix": "*",
                        "addressPrefixType": "IPPrefix"
                    }
                ],
                "sourcePortRanges": [ "0-65535" ],
                "destinations": [
                    {
                        "addressPrefix": "*",
                        "addressPrefixType": "IPPrefix"
                    }
                ],
                "destinationPortRanges": [ "22" ]
            }
        },
        {
            "name": "[concat(parameters('networkManagerName'), '/', parameters('securityConfigurationName'),'/',variables('ruleCollection1Name'),'/','HTTP-deny')]",
            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules",
            "apiVersion": "2021-02-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkManagers/networkGroups', parameters('networkManagerName'), parameters('networkGroup1Name'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations', parameters('networkManagerName'), parameters('securityConfigurationName'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections', parameters('networkManagerName'), parameters('securityConfigurationName'), variables('ruleCollection1Name'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules',parameters('networkManagerName'), parameters('securityConfigurationName'), variables('ruleCollection1Name'),'SSH')]"
            ],
            "kind": "Custom",
            "properties": {
                "access": "Deny",
                "description": "deny access in HTTP",
                "displayName": "deny access in HTTP",
                "priority": 20,
                "direction": "Inbound",
                "protocol": "Any",
                "sources": [
                    {
                        "addressPrefix": "*",
                        "addressPrefixType": "IPPrefix"
                    }
                ],
                "sourcePortRanges": [ "0-65535" ],
                "destinations": [
                    {
                        "addressPrefix": "10.0.4.0/24",
                        "addressPrefixType": "IPPrefix"
                    }
                ],
                "destinationPortRanges": [ "80" ]
            }
        },
        {
            "name": "[concat(parameters('networkManagerName'), '/', parameters('securityConfigurationName'),'/',variables('ruleCollection1Name'),'/','iperf3-deny')]",
            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules",
            "apiVersion": "2021-02-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkManagers/networkGroups', parameters('networkManagerName'), parameters('networkGroup1Name'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations', parameters('networkManagerName'), parameters('securityConfigurationName'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections', parameters('networkManagerName'), parameters('securityConfigurationName'), variables('ruleCollection1Name'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules',parameters('networkManagerName'), parameters('securityConfigurationName'), variables('ruleCollection1Name'),'SSH')]"
            ],
            "kind": "Custom",
            "properties": {
                "access": "Deny",
                "description": "deny port range for iperf3",
                "displayName": "iperf3 deny access",
                "priority": 50,
                "direction": "Inbound",
                "protocol": "Tcp",
                "sources": [
                    {
                        "addressPrefix": "*",
                        "addressPrefixType": "IPPrefix"
                    }
                ],
                "sourcePortRanges": [ "0-65535" ],
                "destinations": [
                    {
                        "addressPrefix": "*",
                        "addressPrefixType": "IPPrefix"
                    }
                ],
                "destinationPortRanges": [ "5201-5210" ]
            }
        },
        {
            "name": "[concat(parameters('networkManagerName'), '/', parameters('securityConfigurationName'),'/',variables('ruleCollection1Name'),'/','Storage')]",
            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules",
            "apiVersion": "2021-02-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkManagers/networkGroups', parameters('networkManagerName'), parameters('networkGroup1Name'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations', parameters('networkManagerName'), parameters('securityConfigurationName'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections', parameters('networkManagerName'), parameters('securityConfigurationName'), variables('ruleCollection1Name'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules',parameters('networkManagerName'), parameters('securityConfigurationName'), variables('ruleCollection1Name'),'iperf3-deny')]"
            ],
            "kind": "Custom",
            "properties": {
                "access": "Allow",
                "description": "allow access to Storage account",
                "displayName": "deny access in RDP",
                "priority": 80,
                "direction": "Outbound",
                "protocol": "Tcp",
                "sources": [
                    {
                        "addressPrefix": "*",
                        "addressPrefixType": "IPPrefix"
                    }
                ],
                "sourcePortRanges": [ "0-65535" ],
                "destinations": [
                    {
                        "addressPrefix": "Storage",
                        "addressPrefixType": "ServiceTag"
                    }
                ],
                "destinationPortRanges": [ "0-65535" ]
            }
        },
        {
            "name": "[concat(parameters('networkManagerName'), '/', parameters('securityConfigurationName'),'/',variables('ruleCollection1Name'),'/','HTTP-deny-outbound')]",
            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules",
            "apiVersion": "2021-02-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkManagers/networkGroups', parameters('networkManagerName'), parameters('networkGroup1Name'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations', parameters('networkManagerName'), parameters('securityConfigurationName'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections', parameters('networkManagerName'), parameters('securityConfigurationName'), variables('ruleCollection1Name'))]",
                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules',parameters('networkManagerName'), parameters('securityConfigurationName'), variables('ruleCollection1Name'),'Storage')]"
            ],
            "kind": "Custom",
            "properties": {
                "access": "Allow",
                "description": "allow access to Storage account",
                "displayName": "deny access in RDP",
                "priority": 90,
                "direction": "Outbound",
                "protocol": "Tcp",
                "sources": [
                    {
                        "addressPrefix": "*",
                        "addressPrefixType": "IPPrefix"
                    }
                ],
                "sourcePortRanges": [ "0-65535" ],
                "destinations": [
                    {
                        "addressPrefix": "10.0.3.0/24",
                        "addressPrefixType": "IPPrefix"
                    }
                ],
                "destinationPortRanges": [ "80" ]
            }
        }
    ]
}