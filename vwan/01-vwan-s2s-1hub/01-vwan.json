{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "hub1location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location where all resources will be created."
            }
        },
        "vwanName": {
            "type": "string",
            "defaultValue": "vwan1",
            "metadata": {
                "description": "Name of the Virtual Wan."
            }
        },
        "vwanSKU": {
            "type": "string",
            "defaultValue": "Standard",
            "metadata": {
                "description": "Sku of the Virtual Wan."
            },
            "allowedValues": [
                "Standard",
                "Basic"
            ]
        },
        "hub1Name": {
            "type": "string",
            "defaultValue": "hub1",
            "metadata": {
                "description": "Name of the Virtual Hub. A virtual hub is created inside a virtual wan."
            }
        },
        "hub1addressPrefix1": {
            "type": "string",
            "defaultValue": "10.10.0.0/23",
            "metadata": {
                "description": "The hub address prefix. This address prefix will be used as the address prefix for the hub vnet"
            }
        },
        "hub1_S2SvpnGatewayScaleUnit": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Scale Units for Site-to-Site (S2S) VPN Gateway in the hub1"
            }
        },
        "mngIP": {
            "type": "string",
            "metadata": {
                "description": "management IP"
            }
        },
        "vnet1location": {
            "type": "string",
            "defaultValue": "resourceGroup().location",
            "metadata": {
                "description": "azure region where is deployed the vnet1"
            }
        },
        "vnet2location": {
            "type": "string",
            "defaultValue": "resourceGroup().location",
            "metadata": {
                "description": "azure region where is deployed the vnet2"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "admin password for the VMs"
            }
        }

    },
    "variables": {
        "vwanName": "[parameters('vwanName')]",
        "hub1location": "[parameters('hub1location')]",
        "hub1Name": "[parameters('hub1Name')]",
        "hub1addressPrefix1": "[parameters('hub1addressPrefix1')]",
        "vnet1Name": "vnet1",
        "vnet2Name": "vnet2",
        "vnet1": {
            "location": "[parameters('vnet1location')]",
            "name": "[variables('vnet1Name')]",
            "addressSpace1Prefix": "10.0.1.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.1.0/25"
        },
        "vnet2": {
            "location": "[parameters('vnet2location')]",
            "name": "[variables('vnet2Name')]",
            "addressSpace1Prefix": "10.0.2.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.2.0/25"
        },
        "hub1connectionNamevnet1": "[concat(variables('vnet1Name'),'conn')]",
        "hub1connectionNamevnet2": "[concat(variables('vnet2Name'),'conn')]",

        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]",
        "vmSize": "Standard_B1s",
        "vmArray": [
            {
                "vmName": "vm1",
                "location": "[variables('vnet1').location]",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vnetName": "[variables('vnet1').name]",
                "subnetName": "[variables('vnet1').subnet1Name]",
                "ipforwarding": false,
                "nsgName": "nsg1"
            },
            {
                "vmName": "vm2",
                "location": "[variables('vnet2').location]",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vnetName": "[variables('vnet2').name]",
                "subnetName": "[variables('vnet2').subnet1Name]",
                "ipforwarding": false,
                "nsgName": "nsg2"
            }
        ],
        "vmCount": "[length(variables('vmArray'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet1').name]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vnet1').location]",
            "dependsOn": [],
            "comments": "This is the vnet1",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet1').addressSpace1Prefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet1').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnet1Prefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet2').name]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vnet2').location]",
            "dependsOn": [],
            "comments": "This is the vnet2",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet2').addressSpace1Prefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet2').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2').subnet1Prefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualWans",
            "name": "[variables('vwanName')]",
            "apiVersion": "2021-05-01",
            "location": "[variables('hub1location')]",
            "properties": {
                "type": "[parameters('vwanSKU')]"
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs",
            "name": "[variables('hub1Name')]",
            "apiVersion": "2021-05-01",
            "location": "[variables('hub1location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualWans', variables('vwanName'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('hub1addressPrefix1')]",
                "virtualWan": {
                    "id": "[resourceId('Microsoft.Network/virtualWans',variables('vwanName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
            "name": "[format('{0}/{1}', variables('hub1Name'), variables('hub1connectionNamevnet1'))]",
            "apiVersion": "2021-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', variables('hub1Name'))]"
            ],
            "properties": {
                "routingConfiguration": {
                    "associatedRouteTable": {
                        "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('hub1Name'), 'defaultRouteTable')]"
                    },
                    "propagatedRouteTables": {
                        "ids": [
                            {
                                "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('hub1Name'), 'defaultRouteTable')]"
                            }
                        ]
                    }
                },
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1Name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
            "apiVersion": "2021-05-01",
            "name": "[format('{0}/{1}', variables('hub1Name'), variables('hub1connectionNamevnet2'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', variables('hub1Name'))]",
                "[resourceId('Microsoft.Network/virtualHubs/hubVirtualNetworkConnections', variables('hub1Name'), variables('hub1connectionNamevnet1'))]"
            ],
            "properties": {
                "routingConfiguration": {
                    "associatedRouteTable": {
                        "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('hub1Name'), 'defaultRouteTable')]"
                    },
                    "propagatedRouteTables": {
                        "ids": [
                            {
                                "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', variables('hub1Name'), 'defaultRouteTable')]"
                            }
                        ]
                    }
                },
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2Name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/vpnGateways",
            "name": "[format('{0}_S2SvpnGW', variables('hub1Name'))]",
            "apiVersion": "2021-05-01",
            "location": "[variables('hub1location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', variables('hub1Name'))]",
                "[resourceId('Microsoft.Network/virtualHubs/hubVirtualNetworkConnections', variables('hub1Name'),  variables('hub1connectionNamevnet2'))]"
            ],
            "properties": {
                "vpnGatewayScaleUnit": "[parameters('hub1_S2SvpnGatewayScaleUnit')]",
                "virtualHub": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs', variables('hub1Name'))]"
                },
                "bgpSettings": {
                    "asn": 65515
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('vmArray')[copyIndex()].nsgName]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[if(equals(parameters('mngIP'), ''), '*', parameters('mngIP'))]",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "copy": {
                "name": "nsgCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-pubIP')]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "Public IP address VMs",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "copy": {
                "name": "publicIpCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-nic' )]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "NIC of the VMs",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses',concat( variables('vmArray')[copyIndex()].vmName,'-pubIP' )  )]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vmArray')[copyIndex()].vnetName)]",
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat( variables('vmArray')[copyIndex()].vmName,'-pubIP' )  )]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vmArray')[copyIndex()].vnetName, variables('vmArray')[copyIndex()].subnetName)]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName  )]"
                },
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].ipforwarding]"
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion": "2021-07-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmArray')[copyIndex()].vmName,'-nic')  )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].publisher]",
                        "offer": "[variables('vmArray')[copyIndex()].offer]",
                        "sku": "[variables('vmArray')[copyIndex()].sku]",
                        "version": "[variables('vmArray')[copyIndex()].version]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-OS')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('vmArray')[copyIndex()].vmName,'-nic')  )]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            }
        }
    ]
}