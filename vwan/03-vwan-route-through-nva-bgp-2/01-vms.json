{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "hub1location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location where all resources will be created."
            }
        },
        "hub2location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location where all resources will be created."
            }
        },
        "mngIP": {
            "type": "string",
            "metadata": {
                "description": "management IP"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "admin password for the VMs"
            }
        }
    },
    "variables": {
        "vnet1location": "[parameters('hub1location')]",
        "vnet2location": "[parameters('hub2location')]",
        "vnet3location": "[parameters('hub1location')]",
        "vnet4location": "[parameters('hub2location')]",
        "vnet101location": "[parameters('hub1location')]",
        "vnet102location": "[parameters('hub2location')]",
        "vnet1Name": "vnet1",
        "vnet2Name": "vnet2",
        "vnet3Name": "vnet3",
        "vnet4Name": "vnet4",
        "vnet101Name": "vnet101",
        "vnet102Name": "vnet102",
        "vnet1": {
            "location": "[variables('vnet1location')]",
            "name": "[variables('vnet1Name')]",
            "addressSpace1Prefix": "10.0.0.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.0.0/26",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.0.64/26",
            "subnet3Name": "subnet3",
            "subnet3Prefix": "10.0.0.128/26"
        },
        "vnet2": {
            "location": "[variables('vnet2location')]",
            "name": "[variables('vnet2Name')]",
            "addressSpace1Prefix": "10.0.2.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.2.0/26",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.2.64/26",
            "subnet3Name": "subnet3",
            "subnet3Prefix": "10.0.2.128/26"
        },
        "vnet3": {
            "location": "[variables('vnet3location')]",
            "name": "[variables('vnet3Name')]",
            "addressSpace1Prefix": "10.0.3.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.3.0/24"
        },
        "vnet4": {
            "location": "[variables('vnet4location')]",
            "name": "[variables('vnet4Name')]",
            "addressSpace1Prefix": "10.0.4.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.4.0/24"
        },
        "vnet101": {
            "location": "[variables('vnet101location')]",
            "name": "[variables('vnet101Name')]",
            "addressSpace1Prefix": "10.0.101.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.101.0/26",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.101.64/26",
            "subnet3Name": "subnet3",
            "subnet3Prefix": "10.0.101.128/26"
        },
        "vnet102": {
            "location": "[variables('vnet102location')]",
            "name": "[variables('vnet102Name')]",
            "addressSpace1Prefix": "10.0.102.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.102.0/26",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.102.64/26",
            "subnet3Name": "subnet3",
            "subnet3Prefix": "10.0.102.128/26"
        },
        "routeTableNamevNet1": "[concat('RT-',variables('vNet1').name)]",
        "routeTableNamevNet2": "[concat('RT-',variables('vNet2').name)]",
        "routeTableNamevNet3": "[concat('RT-',variables('vNet3').name)]",
        "routeTableNamevNet4": "[concat('RT-',variables('vNet4').name)]",
        "routeTableNamevNet101": "[concat('RT-',variables('vNet101').name)]",
        "routeTableNamevNet102": "[concat('RT-',variables('vNet102').name)]",
        "vnet1Tovnet3PeeringName": "[concat(variables('vNet1').name,'-to-', variables('vnet3').name)]",
        "vnet3Tovnet1PeeringName": "[concat(variables('vNet3').name,'-to-', variables('vnet1').name)]",
        "vnet2Tovnet4PeeringName": "[concat(variables('vNet2').name,'-to-', variables('vnet4').name)]",
        "vnet4Tovnet2PeeringName": "[concat(variables('vNet4').name,'-to-', variables('vnet2').name)]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]",
        "nva1": {
            "location": "[variables('vNet1').location]",
            "name": "csr1",
            "vnetName": "[variables('vNet1').name]",
            "subnet1Name": "[variables('vNet1').subnet1Name]",
            "subnet2Name": "[variables('vNet1').subnet2Name]",
            "subnet1nvaAddress": "10.0.0.10",
            "subnet2nvaAddress": "10.0.0.100"
        },
        "nva2": {
            "location": "[variables('vNet2').location]",
            "name": "csr2",
            "vnetName": "[variables('vNet2').name]",
            "subnet1Name": "[variables('vNet2').subnet1Name]",
            "subnet2Name": "[variables('vNet2').subnet2Name]",
            "subnet1nvaAddress": "10.0.2.10",
            "subnet2nvaAddress": "10.0.2.100"
        },
        "nva101": {
            "location": "[variables('vNet101').location]",
            "name": "csr101",
            "vnetName": "[variables('vNet101').name]",
            "subnet1Name": "[variables('vNet101').subnet1Name]",
            "subnet2Name": "[variables('vNet101').subnet2Name]",
            "subnet1nvaAddress": "10.0.101.10",
            "subnet2nvaAddress": "10.0.101.100"
        },
        "nva102": {
            "location": "[variables('vNet102').location]",
            "name": "csr102",
            "vnetName": "[variables('vNet102').name]",
            "subnet1Name": "[variables('vNet102').subnet1Name]",
            "subnet2Name": "[variables('vNet102').subnet2Name]",
            "subnet1nvaAddress": "10.0.102.10",
            "subnet2nvaAddress": "10.0.102.100"
        },
        "nvaArray": [
            {
                "location": "[variables('nva1').location]",
                "nvaName": "[variables('nva1').name]",
                "publisher": "cisco",
                "offer": "cisco-csr-1000v",
                "sku": "17_3_4a-byol",
                "version": "latest",
                "vmSize": "Standard_B2ms",
                "vnetName": "[variables('nva1').vnetName]",
                "pubIPAddressName": "[concat(variables('nva1').name,'-pubIP' )]",
                "subnet1Name": "[variables('nva1').subnet1Name]",
                "subnet2Name": "[variables('nva1').subnet2Name]",
                "nic0": "[concat( variables('nva1').name, '-nic0')]",
                "nic1": "[concat( variables('nva1').name, '-nic1')]",
                "subnet1nvaAddress": "[variables('nva1').subnet1nvaAddress]",
                "subnet2nvaAddress": "[variables('nva1').subnet2nvaAddress]",
                "nsgName": "[concat(variables('nva1').name,'-nsg')]"
            },
            {
                "location": "[variables('nva2').location]",
                "nvaName": "[ variables('nva2').name]",
                "publisher": "cisco",
                "offer": "cisco-csr-1000v",
                "sku": "17_3_4a-byol",
                "version": "latest",
                "vmSize": "Standard_B2ms",
                "vnetName": "[variables('nva2').vnetName]",
                "pubIPAddressName": "[concat(variables('nva2').name,'-pubIP' )]",
                "subnet1Name": "[variables('nva2').subnet1Name]",
                "subnet2Name": "[variables('nva2').subnet2Name]",
                "nic0": "[concat(variables('nva2').name, '-nic0')]",
                "nic1": "[concat( variables('nva2').name, '-nic1')]",
                "subnet1nvaAddress": "[variables('nva2').subnet1nvaAddress]",
                "subnet2nvaAddress": "[variables('nva2').subnet2nvaAddress]",
                "nsgName": "[concat(variables('nva2').name,'-nsg')]"
            },
            {
                "location": "[variables('nva101').location]",
                "nvaName": "[ variables('nva101').name]",
                "publisher": "cisco",
                "offer": "cisco-csr-1000v",
                "sku": "17_3_4a-byol",
                "version": "latest",
                "vmSize": "Standard_B2ms",
                "vnetName": "[variables('nva101').vnetName]",
                "pubIPAddressName": "[concat(variables('nva101').name,'-pubIP' )]",
                "subnet1Name": "[variables('nva101').subnet1Name]",
                "subnet2Name": "[variables('nva101').subnet2Name]",
                "nic0": "[concat(variables('nva101').name, '-nic0')]",
                "nic1": "[concat( variables('nva101').name, '-nic1')]",
                "subnet1nvaAddress": "[variables('nva101').subnet1nvaAddress]",
                "subnet2nvaAddress": "[variables('nva101').subnet2nvaAddress]",
                "nsgName": "[concat(variables('nva101').name,'-nsg')]"
            },
            {
                "location": "[variables('nva102').location]",
                "nvaName": "[ variables('nva102').name]",
                "publisher": "cisco",
                "offer": "cisco-csr-1000v",
                "sku": "17_3_4a-byol",
                "version": "latest",
                "vmSize": "Standard_B2ms",
                "vnetName": "[variables('nva102').vnetName]",
                "pubIPAddressName": "[concat(variables('nva102').name,'-pubIP' )]",
                "subnet1Name": "[variables('nva102').subnet1Name]",
                "subnet2Name": "[variables('nva102').subnet2Name]",
                "nic0": "[concat(variables('nva102').name, '-nic0')]",
                "nic1": "[concat( variables('nva102').name, '-nic1')]",
                "subnet1nvaAddress": "[variables('nva102').subnet1nvaAddress]",
                "subnet2nvaAddress": "[variables('nva102').subnet2nvaAddress]",
                "nsgName": "[concat(variables('nva102').name,'-nsg')]"
            }
        ],
        "nvaCount": "[length(variables('nvaArray'))]",
        "vmSize": "Standard_B1s",
        "vmArray": [
            {
                "vmName": "vm1",
                "location": "[variables('vnet1').location]",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vnetName": "[variables('vnet1').name]",
                "subnetName": "[variables('vnet1').subnet3Name]",
                "ipforwarding": false,
                "nsgName": "vm1-nsg"
            },
            {
                "vmName": "vm2",
                "location": "[variables('vnet2').location]",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vnetName": "[variables('vnet2').name]",
                "subnetName": "[variables('vnet2').subnet3Name]",
                "ipforwarding": false,
                "nsgName": "vm2-nsg"
            },
            {
                "vmName": "vm3",
                "location": "[variables('vnet3').location]",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vnetName": "[variables('vnet3').name]",
                "subnetName": "[variables('vnet3').subnet1Name]",
                "ipforwarding": false,
                "nsgName": "vm3-nsg"
            },
            {
                "vmName": "vm4",
                "location": "[variables('vnet4').location]",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vnetName": "[variables('vnet4').name]",
                "subnetName": "[variables('vnet4').subnet1Name]",
                "ipforwarding": false,
                "nsgName": "vm4-nsg"
            },
            {
                "vmName": "vm101",
                "location": "[variables('vnet101').location]",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vnetName": "[variables('vnet101').name]",
                "subnetName": "[variables('vnet101').subnet3Name]",
                "ipforwarding": false,
                "nsgName": "[concat('vm101','-nsg')]"
            },
            {
                "vmName": "vm102",
                "location": "[variables('vnet102').location]",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vnetName": "[variables('vnet102').name]",
                "subnetName": "[variables('vnet102').subnet3Name]",
                "ipforwarding": false,
                "nsgName": "[concat('vm102','-nsg')]"
            }
        ],
        "vmCount": "[length(variables('vmArray'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTableNamevNet1')]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vNet1').location]",
            "comments": "route table to be associated with subnet3 in vnet1",
            "properties": {
                "routes": [
                    {
                        "name": "majorNet10",
                        "properties": {
                            "addressPrefix": "10.0.0.0/8",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nva1').subnet2nvaAddress]"
                        }
                    },
                    {
                        "name": "majorNet192",
                        "properties": {
                            "addressPrefix": "192.168.0.0/16",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nva1').subnet2nvaAddress]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTableNamevNet2')]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vNet2').location]",
            "comments": "route table to be associated with subnet3 in vnet1",
            "properties": {
                "routes": [
                    {
                        "name": "majorNet10",
                        "properties": {
                            "addressPrefix": "10.0.0.0/8",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nva2').subnet2nvaAddress]"
                        }
                    },
                    {
                        "name": "majorNet192",
                        "properties": {
                            "addressPrefix": "192.168.0.0/16",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nva2').subnet2nvaAddress]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTableNamevNet3')]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vNet3').location]",
            "comments": "route table to be associated with subnet1 in vnet3",
            "properties": {
                "routes": [
                    {
                        "name": "majorNet10",
                        "properties": {
                            "addressPrefix": "10.0.0.0/8",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nva1').subnet2nvaAddress]"
                        }
                    },
                    {
                        "name": "majorNet192",
                        "properties": {
                            "addressPrefix": "192.168.0.0/16",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nva1').subnet2nvaAddress]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTableNamevNet4')]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vNet4').location]",
            "comments": "route table to be associated with subnet1 in vnet4",
            "properties": {
                "routes": [
                    {
                        "name": "majorNet10",
                        "properties": {
                            "addressPrefix": "10.0.0.0/8",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nva2').subnet2nvaAddress]"
                        }
                    },
                    {
                        "name": "majorNet192",
                        "properties": {
                            "addressPrefix": "192.168.0.0/16",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nva2').subnet2nvaAddress]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTableNamevNet101')]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vNet101').location]",
            "comments": "route table to be associated with subnet3 in vnet101",
            "properties": {
                "routes": [
                    {
                        "name": "majorNet10",
                        "properties": {
                            "addressPrefix": "10.0.0.0/8",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nva101').subnet2nvaAddress]"
                        }
                    },
                    {
                        "name": "majorNet192",
                        "properties": {
                            "addressPrefix": "192.168.0.0/16",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nva101').subnet2nvaAddress]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTableNamevNet102')]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vNet102').location]",
            "comments": "route table to be associated with subnet3 in vnet102",
            "properties": {
                "routes": [
                    {
                        "name": "majorNet10",
                        "properties": {
                            "addressPrefix": "10.0.0.0/8",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nva102').subnet2nvaAddress]"
                        }
                    },
                    {
                        "name": "majorNet192",
                        "properties": {
                            "addressPrefix": "192.168.0.0/16",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('nva102').subnet2nvaAddress]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet1').name]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vnet1').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableNamevNet1'))]"
            ],
            "comments": "This is the vnet1",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet1').addressSpace1Prefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet1').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnet1Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet1').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnet2Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet1').subnet3Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnet3Prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableNamevNet1'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet2').name]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vnet2').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableNamevNet2'))]"
            ],
            "comments": "This is the vnet2",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet2').addressSpace1Prefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet2').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2').subnet1Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet2').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2').subnet2Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet2').subnet3Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2').subnet3Prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableNamevNet2'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet3').name]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vnet3').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableNamevNet3'))]"
            ],
            "comments": "This is the vnet3",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet3').addressSpace1Prefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet3').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet3').subnet1Prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableNamevNet3'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet4').name]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vnet4').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableNamevNet4'))]"
            ],
            "comments": "This is the vnet4",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet4').addressSpace1Prefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet4').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet4').subnet1Prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableNamevNet4'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet101').name]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vnet101').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableNamevNet101'))]"
            ],
            "comments": "This is the vnet101",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet101').addressSpace1Prefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet101').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet101').subnet1Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet101').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet101').subnet2Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet101').subnet3Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet101').subnet3Prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableNamevNet101'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet102').name]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vnet102').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableNamevNet102'))]"
            ],
            "comments": "This is the vnet102",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet102').addressSpace1Prefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet102').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet102').subnet1Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet102').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet102').subnet2Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet102').subnet3Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet102').subnet3Prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableNamevNet102'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(variables('vnet1').name, '/',variables('vnet1Tovnet3PeeringName'))]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vnet1').location]",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet1').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet3').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet3').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(variables('vnet3').name, '/',variables('vnet3Tovnet1PeeringName') )]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vnet3').location]",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet1').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet3').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks/virtualNetworkPeerings', variables('vnet1').name, variables('vnet1Tovnet3PeeringName') )]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet1').name)]"
                }
            }
        },
        
                {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(variables('vnet2').name, '/',variables('vnet2Tovnet4PeeringName'))]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vnet2').location]",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet2').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet4').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet4').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(variables('vnet4').name, '/',variables('vnet4Tovnet2PeeringName') )]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vnet4').location]",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet4').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet2').name)]",
                "[resourceId( 'Microsoft.Network/virtualNetworks/virtualNetworkPeerings', variables('vnet2').name, variables('vnet2Tovnet4PeeringName') )]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet2').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nvaArray')[copyIndex()].nsgName]",
            "apiVersion": "2021-02-01",
            "location": "[variables('nvaArray')[copyIndex()].location]",
            "dependsOn": [],
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('mngIP')]",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "UDP-IKE-Rule1",
                        "properties": {
                            "description": "Allow UDP for IKE",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "500",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "UDP-IKE-Rule2",
                        "properties": {
                            "description": "Allow UDP for IKE",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4500",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "copy": {
                "name": "nvaNSGCopy",
                "count": "[variables('nvaCount')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('nvaArray')[copyIndex()].pubIPAddressName]",
            "apiVersion": "2020-11-01",
            "comments": "public IP assigned to the nva",
            "location": "[variables('nvaArray')[copyIndex()].location]",
            "dependsOn": [],
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 30
            },
            "copy": {
                "name": "nvaPubIPCopy",
                "count": "[variables('nvaCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nvaArray')[copyIndex()].nic0]",
            "apiVersion": "2021-02-01",
            "location": "[variables('nvaArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('nvaArray')[copyIndex()].pubIPAddressName)]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nvaArray')[copyIndex()].nsgName)]",
                "[resourceId('Microsoft.Network/virtualNetworks',variables('nvaArray')[copyIndex()].vnetName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconf-nic0-', variables('nvaArray')[copyIndex()].nvaName )]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('nvaArray')[copyIndex()].subnet1nvaAddress]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('nvaArray')[copyIndex()].pubIPAddressName  )]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('nvaArray')[copyIndex()].vnetName, variables('nvaArray')[copyIndex()].subnet1Name )]"

                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nvaArray')[copyIndex()].nsgName)]"
                },
                "enableIPForwarding": true
            },
            "copy": {
                "name": "crsNIC0Copy",
                "count": "[variables('nvaCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nvaArray')[copyIndex()].nic1]",
            "apiVersion": "2021-02-01",
            "location": "[variables('nvaArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('nvaArray')[copyIndex()].vnetName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconf-nic1-', variables('nvaArray')[copyIndex()].nvaName )]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('nvaArray')[copyIndex()].subnet2nvaAddress]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('nvaArray')[copyIndex()].vnetName, variables('nvaArray')[copyIndex()].subnet2Name )]"

                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            },
            "copy": {
                "name": "crsNIC1Copy",
                "count": "[variables('nvaCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('nvaArray')[copyIndex()].nvaName ]",
            "apiVersion": "2021-03-01",
            "location": "[variables('nvaArray')[copyIndex()].location]",
            "plan": {
                "name": "[variables('nvaArray')[copyIndex()].sku]",
                "publisher": "[variables('nvaArray')[copyIndex()].publisher]",
                "product": "[variables('nvaArray')[copyIndex()].offer]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nvaArray')[copyIndex()].nic0)]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nvaArray')[copyIndex()].nic1)]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('nvaArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('nvaArray')[copyIndex()].nvaName]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('nvaArray')[copyIndex()].publisher]",
                        "offer": "[variables('nvaArray')[copyIndex()].offer]",
                        "sku": "[variables('nvaArray')[copyIndex()].sku]",
                        "version": "[variables('nvaArray')[copyIndex()].version]"
                    },
                    "osDisk": {
                        "name": "[concat(variables('nvaArray')[copyIndex()].nvaName,'-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nvaArray')[copyIndex()].nic0 )]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nvaArray')[copyIndex()].nic1 )]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "nvaVMCopy",
                "count": "[variables('nvaCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('vmArray')[copyIndex()].nsgName]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [],
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('mngIP')]",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "copy": {
                "name": "nsgCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-pubIP')]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [],
            "comments": "Public IP address VMs",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "copy": {
                "name": "pubIpCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-nic' )]",
            "apiVersion": "2021-02-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "NIC of the VMs",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses',concat( variables('vmArray')[copyIndex()].vmName,'-pubIP' )  )]",
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName)]",
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vmArray')[copyIndex()].vnetName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat( variables('vmArray')[copyIndex()].vmName,'-pubIP' )  )]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vmArray')[copyIndex()].vnetName, variables('vmArray')[copyIndex()].subnetName)]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName  )]"
                },
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].ipforwarding]"
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion": "2021-03-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmArray')[copyIndex()].vmName,'-nic')  )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].publisher]",
                        "offer": "[variables('vmArray')[copyIndex()].offer]",
                        "sku": "[variables('vmArray')[copyIndex()].sku]",
                        "version": "[variables('vmArray')[copyIndex()].version]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-OS')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('vmArray')[copyIndex()].vmName,'-nic')  )]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            }
        }
    ]
}