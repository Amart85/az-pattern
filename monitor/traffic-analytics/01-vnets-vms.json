{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "azure region where is deployed the first VNet"
            }
        },
        "mngIP": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "management IP- keep empty if you do not want to filter the connection to "
            }
        },
        "vm1Name": {
            "type": "string",
            "defaultValue": "vm1",
            "metadata": {
                "description": "name VM1"
            }
        },
        "vm2Name": {
            "type": "string",
            "defaultValue": "vm2",
            "metadata": {
                "description": "name VM2"
            }
        },
        "vm3Name": {
            "type": "string",
            "defaultValue": "vm3",
            "metadata": {
                "description": "name VM3"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "admin password for the VMs"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[format('store{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the Storage Account"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "workspaceName": {
            "type": "string",
            "defaultValue": "workspacefab1",
            "metadata": {
                "description": "Name of the workspace."
            }
        },
        "sku": {
            "type": "string",
            "allowedValues": [
                "pergb2018",
                "Free",
                "Standalone",
                "PerNode",
                "Standard",
                "Premium"
            ],
            "defaultValue": "pergb2018",
            "metadata": {
                "description": "Pricing tier: PerGB2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
            }
        },
        "retentionInDays": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "Number of days to retain data."
            }
        },
        "resourcePermissions": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "true to use resource or workspace permissions. false to require workspace permissions."
            }
        }
    },
    "variables": {
        "vNet1": {
            "location": "[parameters('location')]",
            "name": "vnet1",
            "addressSpacePrefix": "10.0.0.0/24",
            "subnet1Name": "Tenant",
            "subnet1Prefix": "10.0.0.0/25",
            "subnet2Name": "GatewaySubnet",
            "subnet2Prefix": "10.0.0.128/25",
            "peeringNameTovnet2": "to-vnet2",
            "tag": "hub-vnet"
        },
        "vNet2": {
            "location": "[parameters('location')]",
            "name": "vnet2",
            "addressSpacePrefix": "10.0.2.0/24",
            "subnet1Name": "Tenant",
            "subnet1Prefix": "10.0.2.0/27",
            "subnet2Name": "Tenant2",
            "subnet2Prefix": "10.0.2.32/27",
            "subnet3Name": "Tenant3",
            "subnet3Prefix": "10.0.2.64/27",
            "subnet4Name": "Tenant4",
            "subnet4Prefix": "10.0.2.96/27",
            "peeringNameTovnet1": "to-vnet1",
            "tag": "spoke-vnet"
        },
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]",
        "vmsize": "Standard_B2s",
        "vm1Name": "[parameters('vm1Name')]",
        "vm2Name": "[parameters('vm2Name')]",
        "vm3Name": "[parameters('vm3Name')]",
        "vmArray": [
            {
                "deployment": true,
                "location": "[variables('vnet1').location]",
                "vmName": "[variables('vm1Name')]",
                "vmSize": "[variables('vmSize')]",
                "imagePublisher": "MicrosoftWindowsServer",
                "imageOffer": "WindowsServer",
                "OSVersion": "2019-Datacenter",
                "vNetName": "[variables('vNet1').name]",
                "subnetName": "[variables('vnet1').subnet1Name]",
                "pipObject": {
                    "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',concat( variables('vm1Name'),'-pubIP' )  )]"
                },
                "nsgName": "[concat(variables('vm1Name'),'-nsg')]",
                "enableIPForwarding": true,
                "acceleratedNetworking": false
            },
            {
                "deployment": true,
                "location": "[variables('vnet2').location]",
                "vmName": "[variables('vm2Name')]",
                "vmSize": "[variables('vmSize')]",
                "imagePublisher": "MicrosoftWindowsServer",
                "imageOffer": "WindowsServer",
                "OSVersion": "2019-Datacenter",
                "vNetName": "[variables('vNet2').name]",
                "subnetName": "[variables('vnet2').subnet1Name]",
                "pipObject": {
                    "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',concat( variables('vm2Name'),'-pubIP' )  )]"
                },
                "nsgName": "[concat(variables('vm2Name'),'-nsg')]",
                "enableIPForwarding": true,
                "acceleratedNetworking": false
            },
            {
                "deployment": true,
                "location": "[variables('vnet2').location]",
                "vmName": "[variables('vm3Name')]",
                "vmSize": "[variables('vmSize')]",
                "imagePublisher": "MicrosoftWindowsServer",
                "imageOffer": "WindowsServer",
                "OSVersion": "2019-Datacenter",
                "vNetName": "[variables('vNet2').name]",
                "subnetName": "[variables('vnet2').subnet2Name]",
                "pipObject": {
                    "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',concat( variables('vm3Name'),'-pubIP' )  )]"
                },
                "nsgName": "[concat(variables('vm3Name'),'-nsg')]",
                "enableIPForwarding": true,
                "acceleratedNetworking": false
            }
        ],
        "vmCount": "[length(variables('vmArray'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-06-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {}
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[parameters('workspaceName')]",
            "apiVersion": "2020-10-01",
            "location": "[parameters('location')]",
            "comments": "workspace log analytics",
            "properties": {
                "sku": {
                    "name": "[parameters('sku')]"
                },
                "retentionInDays": "[parameters('retentionInDays')]",
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": "[parameters('resourcePermissions')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet1').name]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vnet1').location]",
            "comments": "This is the first vNet",
            "tags": {
                "Environment": "[variables('vnet1').tag]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet1').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet1').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnet1Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet1').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnet2Prefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet2').name]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vnet2').location]",
            "comments": "This is the second vNet",
            "tags": {
                "Environment": "[variables('vnet2').tag]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet2').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet2').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2').subnet1Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet2').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2').subnet2Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet2').subnet3Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2').subnet3Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet2').subnet4Name]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2').subnet4Prefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(variables('vNet1').name,'/',variables('vNet1').peeringNameTovnet2)]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vnet1').location]",
            "comments": "VNet peering from vnet1 to vnet2 ",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnet2').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(variables('vnet2').name,'/',variables('vnet2').peeringNameTovnet1)]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vnet2').location]",
            "comments": "VNet peering vNetHub2 to vNetHub1 ",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnet1').name)]"
                }
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('vmArray')[copyIndex()].nsgName)]",
            "apiVersion": "2020-05-01",
            "location": "[concat(variables('vmArray')[copyIndex()].location)]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP-rule",
                        "properties": {
                            "description": "allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "[if(equals(parameters('mngIP'), ''), '*', parameters('mngIP'))]",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "custom-range1",
                        "properties": {
                            "description": "allow custom range ports",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5201-5220",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 600,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "custom-range2",
                        "properties": {
                            "description": "allow custom range ports",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5221-5250",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 700,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "HTTPS-outbound",
                        "properties": {
                            "description": "HTTPS traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 800,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "HTTP-outbound",
                        "properties": {
                            "description": "HTTP traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 801,
                            "direction": "Outbound"
                        }
                    }
                ]
            },
            "copy": {
                "name": "nsgCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[and(variables('vmArray')[copyIndex()].deployment, greater(length(variables('vmArray')[copyIndex()].pipObject), 0))]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2021-05-01",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-pubIP')]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "copy": {
                "name": "publicIpCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-nic' )]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vmArray')[copyIndex()].vNetName )]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vmArray')[copyIndex()].vmName,'-pubIP') )]",
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName )]"
            ],
            "properties": {
                "primary": true,
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].enableIPForwarding]",
                "enableAcceleratedNetworking": "[variables('vmArray')[copyIndex()].acceleratedNetworking]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": "[if( greater(length(variables('vmArray')[copyIndex()].pipObject), 0), variables('vmArray')[copyIndex()].pipObject, json('null') )]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vmArray')[copyIndex()].vNetName, variables('vmArray')[copyIndex()].subnetName)]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName )]"
                }
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion": "2021-07-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmArray')[copyIndex()].vmName,'-nic')  )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].imagePublisher]",
                        "offer": "[variables('vmArray')[copyIndex()].imageOffer]",
                        "sku": "[variables('vmArray')[copyIndex()].OSVersion]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-OsDisk')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('vmArray')[copyIndex()].vmName,'-nic' )  )]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            }
        }
    ],
    "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[parameters('storageAccountName')]"
        },
        "storageAccountId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
        }
    }
}