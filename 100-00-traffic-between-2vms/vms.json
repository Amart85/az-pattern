{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue" : "eastus",
            "metadata": {
                "description": "azure region where is deployed the vnet"
            }
        },
        "adminUsername": {
          "type": "string",
          "metadata": {
              "description": "admin username"
          }
        },
        "adminPassword": {
          "type": "securestring",
          "metadata": {
              "description": "admin password"
        }
      }
    },
    "variables": {
        "windows": {
          "imagePublisher": "MicrosoftWindowsServer",
          "imageOffer": "WindowsServer",
          "OSVersion": "2016-Datacenter",
          "vmsize"   : "Standard_D1_v2"
        },
        "linux":{
          "imagePublisher": "openlogic",
          "imageOffer" : "CentOS",
          "OSVersion"  : "7.5",
          "vmsize"     : "Standard_B1s"
        },
        "bsd":{
          "imagePublisher": "MicrosoftOSTC",
          "imageOffer" : "FreeBSD",
          "OSVersion"  : "11.1",
          "vmsize"     : "Standard_B1s"
        },
        "vNet": {
            "location": "[parameters('location')]",
            "name": "vNet",
            "addressSpace1Prefix": "10.0.1.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.1.0/24"
        },
        "nsg":{
            "name":"nsg",
            "location": "[variables('vNet').location]"
        },
        "adminUsername" : "[parameters('adminUsername')]" ,
        "adminPassword" : "[parameters('adminPassword')]" ,
        "vmsize" :{
           "linux": "Standard_B1s",
           "windows": "Standard_D1_v2",
           "bsd": "Standard_B1s"
        },
        "vmarray":[
            {
                "location"      : "[variables('vNet').location]",
                "vmName"        : "vm1",            
                "vmSize"        : "[variables('linux').vmsize]",
                "imagePublisher": "[variables('linux').imagePublisher]",
                "imageOffer"    : "[variables('linux').imageOffer]",
                "OSVersion"     : "[variables('linux').OSVersion]",
                "VNetName"      : "[variables('vNet').name]",
                "SubnetName"    : "[variables('vNet').subnet1Name]",
                "privateIP"     : "10.0.1.10",
                "ipforwarding"  : false
            },
            {
                "location"      : "[variables('vNet').location]",
                "vmName"        : "vm2",            
                "vmSize"        : "[variables('linux').vmsize]",
                "imagePublisher": "[variables('linux').imagePublisher]",
                "imageOffer"    : "[variables('linux').imageOffer]",
                "OSVersion"     : "[variables('linux').OSVersion]",
                "VNetName"      : "[variables('vNet').name]",
                "SubnetName"    : "[variables('vNet').subnet1Name]",
                "privateIP"     : "10.0.1.20",
                "ipforwarding"  : false
            }
        ],
        "vmCount": "[length(variables('vmArray'))]"
    },
    "resources": [
        {
            "apiVersion": "2018-12-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsg').name]",
            "location": "[variables('nsg').location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    },
                    {
                      "name": "RDP-rule",
                      "properties": {
                          "description": "allow RDP",
                          "protocol": "Tcp",
                          "sourcePortRange": "*",
                          "destinationPortRange": "3389",
                          "sourceAddressPrefix": "*",
                          "destinationAddressPrefix": "VirtualNetwork",
                          "access": "Allow",
                          "priority": 510,
                          "direction": "Inbound"
                      }
                  }
                ]
            }
        },
        {
            "apiVersion": "2018-12-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet').name]",
            "location": "[variables('vNet').location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsg').name)]"
            ],
            "comments": "This is the first vNet",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet').addressSpace1Prefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet').subnet1Prefix]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg').name)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-12-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-pubIP')]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "Public IP address VMs",
            "properties": {
              "publicIPAllocationMethod": "Dynamic"
            },
            "copy": {
              "name": "publicIpCopy",
              "count": "[variables('vmCount')]"
            }
          },
          {
            "apiVersion": "2018-12-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "Create NICs of Azure VMs by loop",
            "dependsOn": [
              "[concat('Microsoft.Network/publicIPAddresses/', variables('vmArray')[copyIndex()].vmName,'-pubIP' )]",
              "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vmArray')[copyIndex()].VNetName))]"
            ],
            "properties": {
              "ipConfigurations": [
                {
                  "name": "ipconfig1",
                  "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('vmArray')[copyIndex()].privateIP]",
                    "publicIPAddress": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat( variables('vmArray')[copyIndex()].vmName,'-pubIP' )  )]"
                    },
                    "subnet": {  
                      "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vmArray')[copyIndex()].VNetName),'/subnets/', variables('vmArray')[copyIndex()].SubnetName)]"
                    }
                  }
                }
              ],
              "enableIPForwarding": "[variables('vmArray')[copyIndex()].ipforwarding]"
            },
            "copy": {
              "name": "nicCopy",
              "count": "[variables('vmCount')]"
            }
          },
          {
            "type": "Microsoft.Compute/virtualMachines",
            "name":  "[variables('vmArray')[copyIndex()].vmName]",
            "apiVersion":  "2018-10-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "Create Azure VMs by loop",
            "dependsOn": [
              "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmArray')[copyIndex()].vmName,'-NIC')  )]"
            ],
            "properties": {
              "hardwareProfile": {
                "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
              },
              "osProfile": {
                "computerName":  "[variables('vmArray')[copyIndex()].vmName]",
                "adminUsername": "[variables('adminUsername')]",
                "adminPassword": "[variables('adminPassword')]"
              },
              "storageProfile": {
                "imageReference": {
                  "publisher":  "[variables('vmArray')[copyIndex()].imagePublisher]",
                  "offer": "[variables('vmArray')[copyIndex()].imageOffer]" ,
                  "sku": "[variables('vmArray')[copyIndex()].OSVersion]",
                  "version": "latest"
                },
                "osDisk": {
                  "createOption": "FromImage"
                }
              },
              "networkProfile": {
                "networkInterfaces": [
                  {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )  )]"
                  }
                ]
              }
            },
            "copy": {
              "name": "nodeCopy",
              "count": "[variables('vmCount')]"
            }    
          }        
    ]
}
