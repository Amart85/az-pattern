{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "azureFirewallName": {
            "type": "string",
            "defaultValue": "azfw1"
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet1"
        },
        "zones": {
            "type": "array",
            "defaultValue": []
        },
        "managementPublicIpZones": {
            "type": "array",
            "defaultValue": []
        },
        "publicIpZones": {
            "type": "array",
            "defaultValue": []
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "admin password"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The storage account type for the disks of the VM"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "VM size"
            }
        },
        "publisher": {
            "type": "string",
            "defaultValue": "canonical",
            "metadata": {
                "description": "image publisher"
            }
        },
        "offer": {
            "type": "string",
            "defaultValue": "0001-com-ubuntu-server-focal",
            "metadata": {
                "description": "image offer"
            }
        },
        "sku": {
            "type": "string",
            "defaultValue": "20_04-lts",
            "metadata": {
                "description": "image SKU"
            }
        },
        "version": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "image version"
            }
        }
    },
    "variables": {
        "azureFirewallTier": "Basic",
        "azfwManagementPublicIpAddressName": "[concat(parameters('azureFirewallName'),'-mngPubIP')]",
        "azfwPublicIpAddressName": "[concat(parameters('azureFirewallName'),'-pubIP')]",
        "firewallPolicyName": "policy1",
        "linuxUpdate": "sudo apt update;",
        "linuxNgixCommand": "[concat('sudo apt-get -y install nginx;  sudo systemctl enable nginx; sudo systemctl start nginx;','echo \"<style> h1 { color: blue; } </style> <h1>\" > /var/www/html/index.nginx-debian.html', ' && ', 'cat /etc/hostname >> /var/www/html/index.nginx-debian.html', ' && ', 'echo \" </h1>\" >> /var/www/html/index.nginx-debian.html')]",
        "linuxCommand": "[concat('sleep 1m;',  variables('linuxUpdate'),  variables('linuxNgixCommand'))]",

        "vnet1": {
            "location": "[parameters('location')]",
            "name": "[parameters('vnetName')]",
            "addressSpace1": "10.0.0.0/24",
            "addressSpace2": "100.64.0.0/24",
            "AzureFirewallSubnet": "AzureFirewallSubnet",
            "AzureFirewallManagementSubnet": "AzureFirewallManagementSubnet",
            "AzureBastionSubnet": "AzureBastionSubnet",
            "subnetApp1": "subnetApp1",
            "subnetApp2": "subnetApp2",
            "AzureFirewallSubnetPrefix": "10.0.0.0/26",
            "AzureFirewallManagementSubnetPrefix": "10.0.0.64/26",
            "AzureBastionSubnetPrefix": "100.64.0.0/26",
            "subnetApp1Prefix": "10.0.0.128/26",
            "subnetApp2Prefix": "10.0.0.192/26"
        },
        "azfwprivIP": "10.0.0.4",
        "vmapp1Name": "vmapp1",
        "vmapp2Name": "vmapp2",
        "vmapp1IpAddress": "10.0.0.150",
        "vmapp2IpAddress": "10.0.0.200",
        "vmarray": [
            {
                "deployment": true,
                "location": "[parameters('location')]",
                "vmName": "[variables('vmapp1Name')]",
                "vmSize": "[parameters('vmSize')]",
                "publisher": "[parameters('publisher')]",
                "offer": "[parameters('offer')]",
                "sku": "[parameters('sku')]",
                "version": "[parameters('version')]",
                "vnetName": "[variables('vnet1').name]",
                "subnetName": "[variables('vnet1').subnetApp1]",
                "privateIP": "[variables('vmapp1IpAddress')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false,
                "scriptCommand": "[variables('linuxCommand')]"
            },
            {
                "deployment": true,
                "location": "[parameters('location')]",
                "vmName": "[variables('vmapp2Name')]",
                "vmSize": "[parameters('vmSize')]",
                "publisher": "[parameters('publisher')]",
                "offer": "[parameters('offer')]",
                "sku": "[parameters('sku')]",
                "version": "[parameters('version')]",
                "vNetName": "[variables('vnet1').name]",
                "subnetName": "[variables('vnet1').subnetApp2]",
                "privateIP": "[variables('vmapp2IpAddress')]",
                "enableIPForwarding": false,
                "acceleratedNetworking": false,
                "scriptCommand": "[variables('linuxCommand')]"
            }
        ],
        "vmCount": "[length(variables('vmArray'))]",
        "RT-subnetApp1": "[concat('RT-',variables('vnet1').subnetApp1)]",
        "RT-subnetApp2": "[concat('RT-',variables('vnet1').subnetApp2)]",

        "bastionName": "bastion",
        "bastionSubnetName": "[variables('vnet1').AzureBastionSubnet]",
        "bastionPublicIPAddressName": "[concat(variables('bastionName'),'-pubIP')]",
        "bastionSkuName": "Standard",
        "deploymentBastion": true
    },
    "resources": [
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('RT-subnetApp1')]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vnet1').location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "to-subnetApp2",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnetApp2Prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('azfwprivIP')]"
                        }
                    },
                    {
                        "name": "to-internet",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('azfwprivIP')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('RT-subnetApp2')]",
            "apiVersion": "2021-05-01",
            "location": "[variables('vnet1').location]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "to-subnetApp1",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnetApp1Prefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('azfwprivIP')]"
                        }
                    },
                    {
                        "name": "to-internet",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('azfwprivIP')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet1').name]",
            "location": "[variables('vnet1').location]",
            "apiVersion": "2022-05-01",
            "dependsOn": [],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet1').addressSpace1]",
                        "[variables('vnet1').addressSpace2]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet1').AzureFirewallSubnet]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').AzureFirewallSubnetPrefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet1').AzureFirewallManagementSubnet]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').AzureFirewallManagementSubnetPrefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet1').AzureBastionSubnet]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').AzureBastionSubnetPrefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet1').subnetApp1]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnetApp1Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vnet1').subnetApp2]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1').subnetApp2Prefix]"
                        }
                    }
                ]
            },
            "tags": {}
        },
        {
            "apiVersion": "2021-05-01",
            "type": "Microsoft.Network/firewallPolicies",
            "resources": [],
            "properties": {
                "sku": {
                    "tier": "Basic"
                }
            },
            "name": "[variables('firewallPolicyName')]",
            "location": "swedencentral",
            "tags": {}
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2022-01-01",
            "name": "[concat(variables('firewallPolicyName'), '/','ruleColletionGrp1')]",
            "location": "swedencentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('azfwPublicIpAddressName'))]",
                "[resourceId('Microsoft.Network/azureFirewalls',parameters('azureFirewallName'))]"
            ],
            "properties": {
                "priority": 200,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "name": "ruleColl1",
                        "priority": 200,
                        "rules": [
                            {
                                "ruleType": "NetworkRule",
                                "name": "app1-to-app2",
                                "ipProtocols": [
                                    "Any"
                                ],
                                "sourceAddresses": [
                                    "[variables('vnet1').subnetApp1Prefix]"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "[variables('vnet1').subnetApp2Prefix]"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                    "*"
                                ]
                            },
                            {
                                "ruleType": "NetworkRule",
                                "name": "app2-to-app1",
                                "ipProtocols": [
                                    "Any"
                                ],
                                "sourceAddresses": [
                                    "[variables('vnet1').subnetApp2Prefix]"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "[variables('vnet1').subnetApp1Prefix]"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                    "*"
                                ]
                            }
                        ]
                    },
                    {
                        "ruleCollectionType": "FirewallPolicyNatRuleCollection",
                        "action": {
                            "type": "Dnat"
                        },
                        "name": "in-vmapp1",
                        "priority": 150,
                        "rules": [
                            {
                                "ruleType": "NatRule",
                                "name": "HTTP-app1",
                                "translatedAddress": "[variables('vmapp1IpAddress')]",
                                "translatedPort": "80",
                                "ipProtocols": [
                                    "TCP"
                                ],
                                "sourceAddresses": [
                                    "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('azfwPublicIpAddressName') ), '2020-11-01').ipAddress]"
                                ],
                                "destinationPorts": [
                                    "8091"
                                ]
                            }
                        ]
                    },
                    {
                        "ruleCollectionType": "FirewallPolicyNatRuleCollection",
                        "action": {
                            "type": "Dnat"
                        },
                        "name": "in-vmapp2",
                        "priority": 151,
                        "rules": [
                            {
                                "ruleType": "NatRule",
                                "name": "HTTP-app2",
                                "translatedAddress": "[variables('vmapp2IpAddress')]",
                                "translatedPort": "80",
                                "ipProtocols": [
                                    "TCP"
                                ],
                                "sourceAddresses": [
                                    "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('azfwPublicIpAddressName') ), '2020-11-01').ipAddress]"
                                ],
                                "destinationPorts": [
                                    "8092"
                                ]
                            }
                        ]
                    },
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "name": "appRuleColl1",
                        "priority": 400,
                        "rules": [
                            {
                                "ruleType": "ApplicationRule",
                                "name": "outboud-http-https",
                                "protocols": [
                                    {
                                        "protocolType": "Http",
                                        "port": 80
                                    },
                                    {
                                        "protocolType": "Https",
                                        "port": 443
                                    }
                                ],
                                "fqdnTags": [],
                                "webCategories": [],
                                "targetFqdns": [
                                    "*.ubuntu.com",
                                    "*.microsoft.com",
                                    "*azure.com"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                    "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": []
                            }
                        ]

                    }
                ]
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[variables('azfwManagementPublicIpAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "zones": "[parameters('managementPublicIpZones')]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": {}
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[variables('azfwPublicIpAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "zones": "[parameters('publicIpZones')]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": {}
        },
        {
            "apiVersion": "2021-05-01",
            "type": "Microsoft.Network/azureFirewalls",
            "name": "[parameters('azureFirewallName')]",
            "location": "[parameters('location')]",
            "zones": "[parameters('zones')]",
            "dependsOn": [
                "[resourceId( 'Microsoft.Network/publicIpAddresses', variables('azfwManagementPublicIpAddressName'))]",
                "[resourceId( 'Microsoft.Network/publicIpAddresses', variables('azfwPublicIpAddressName'))]",
                "[resourceId( 'Microsoft.Network/virtualNetworks', variables('vnet1').name)]",
                "[resourceId( 'Microsoft.Network/firewallPolicies', variables('firewallPolicyName') )]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('azfwPublicIpAddressName')]",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId( 'Microsoft.Network/virtualNetworks/subnets', variables('vnet1').name,  variables('vnet1').AzureFirewallSubnet)]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId( 'Microsoft.Network/publicIPAddresses', variables('azfwPublicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "sku": {
                    "tier": "[variables('azureFirewallTier')]"
                },
                "managementIpConfiguration": {
                    "name": "[variables('azfwManagementPublicIpAddressName')]",
                    "properties": {
                        "subnet": {
                            "id": "[resourceId( 'Microsoft.Network/virtualNetworks/subnets', variables('vnet1').name, variables('vnet1').AzureFirewallManagementSubnet)]"
                        },
                        "publicIPAddress": {
                            "id": "[resourceId( 'Microsoft.Network/publicIpAddresses', variables('azfwManagementPublicIpAddressName'))]"
                        }
                    }
                },
                "firewallPolicy": {
                    "id": "[resourceId( 'Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
                }
            },
            "tags": {}
        },
        {
            "apiVersion": "2021-05-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )]",
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "Create NICs of Azure VMs by loop",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vmArray')[copyIndex()].VNetName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('vmArray')[copyIndex()].privateIP]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vmArray')[copyIndex()].VNetName, variables('vmArray')[copyIndex()].SubnetName)]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].enableIPForwarding]"
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "apiVersion": "2022-03-01",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "comments": "Create Azure VMs by loop",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmArray')[copyIndex()].vmName,'-NIC')  )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].publisher]",
                        "offer": "[variables('vmArray')[copyIndex()].offer]",
                        "sku": "[variables('vmArray')[copyIndex()].sku]",
                        "version": "[variables('vmArray')[copyIndex()].version]"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-OSdisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "[parameters('storageAccountType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )  )]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "VMCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vmArray')[copyIndex()].vmName, '/', 'customscript')]",
            "condition": "[variables('vmArray')[copyIndex()].deployment]",
            "comments": "custom script extension to install nginx",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "copy": {
                "name": "VMScriptCopy",
                "count": "[variables('vmCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmArray')[copyIndex()].vmName )]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "commandToExecute": "[variables('vmArray')[copyIndex()].scriptCommand]"
                }
            }
        },
        {
            "comments": "public IP of Azure Bastion",
            "condition": "[variables('deploymentBastion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2021-05-01",
            "name": "[variables('bastionPublicIPAddressName')]",
            "location": "[variables('vnet1').location]",
            "sku": {
                "name": "[variables('bastionSkuName')]"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "comments": "Deployment of the Azure Bastion in vnet1",
            "condition": "[variables('deploymentBastion')]",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2021-05-01",
            "name": "[variables('bastionName')]",
            "location": "[variables('vnet1').location]",
            "sku": {
                "name": "Standard"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1').name)]"
            ],
            "properties": {
                "disableCopyPaste": false,
                "enableFileCopy": true,
                "enableIpConnect": true,
                "enableShareableLink": false,
                "enableTunneling": true,
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet1').name, variables('bastionSubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "add-RT",
            "dependsOn": [
                "VMScriptCopy",
                "[resourceId('Microsoft.Network/routeTables', variables('RT-subnetApp1'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('RT-subnetApp2'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "name": "[variables('vnet1').name]",
                            "location": "[variables('vnet1').location]",
                            "apiVersion": "2022-05-01",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[variables('vnet1').addressSpace1]",
                                        "[variables('vnet1').addressSpace2]"
                                    ]
                                },
                                "subnets": [
                                    {
                                        "name": "[variables('vnet1').AzureFirewallSubnet]",
                                        "properties": {
                                            "addressPrefix": "[variables('vnet1').AzureFirewallSubnetPrefix]"
                                        }
                                    },
                                    {
                                        "name": "[variables('vnet1').AzureFirewallManagementSubnet]",
                                        "properties": {
                                            "addressPrefix": "[variables('vnet1').AzureFirewallManagementSubnetPrefix]"
                                        }
                                    },
                                    {
                                        "name": "[variables('vnet1').AzureBastionSubnet]",
                                        "properties": {
                                            "addressPrefix": "[variables('vnet1').AzureBastionSubnetPrefix]"
                                        }
                                    },
                                    {
                                        "name": "[variables('vnet1').subnetApp1]",
                                        "properties": {
                                            "addressPrefix": "[variables('vnet1').subnetApp1Prefix]",
                                            "routeTable": {
                                                "id": "[resourceId('Microsoft.Network/routeTables', variables('RT-subnetApp1'))]"
                                            }
                                        }
                                    },
                                    {
                                        "name": "[variables('vnet1').subnetApp2]",
                                        "properties": {
                                            "addressPrefix": "[variables('vnet1').subnetApp2Prefix]",
                                            "routeTable": {
                                                "id": "[resourceId('Microsoft.Network/routeTables', variables('RT-subnetApp2'))]"
                                            }
                                        }
                                    }
                                ]
                            },
                            "tags": {}
                        }
                    ]
                }
            }
        }
    ]
}