{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "naming prefix"
            }
        },
        "location1": {
            "type": "string",
            "allowedValues": [
                "centralus",
                "eastus",
                "eastus2",
                "southcentralus",
                "westus2",
                "westus3",
                "canadacentral",
                "francecentral",
                "germanywestcentral",
                "uksouth",
                "northeurope",
                "westeurope",
                "southeastasia",
                "australiaeast",
                "japaneast"
            ],
            "metadata": {
                "description": "Azure regions with Availability Zone"
            }
        },
        "location2": {
            "type": "string",
            "allowedValues": [
                "centralus",
                "eastus",
                "eastus2",
                "southcentralus",
                "westus2",
                "westus3",
                "canadacentral",
                "francecentral",
                "germanywestcentral",
                "uksouth",
                "northeurope",
                "westeurope",
                "southeastasia",
                "australiaeast",
                "japaneast"
            ],
            "metadata": {
                "description": "Azure regions with Availability Zone"
            }
        },
        "vNet1Name": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'vnet1')]",
            "metadata": {
                "description": "pre-existing VNet1"
            }
        },
        "vNet2Name": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'vnet2')]",
            "metadata": {
                "description": "pre-existing VNet2"
            }
        },
        "gateway1PublicIP1Name": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'vpnGw1IP1')]",
            "metadata": {
                "description": "Arbitrary name for public IP1 resource used for the new azure gateway1"
            }
        },
        "gateway1PublicIP2Name": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'vpnGw1IP2')]",
            "metadata": {
                "description": "Arbitrary name for public IP2 resource used for the new azure gateway1"
            }
        },
        "gateway2PublicIP1Name": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'vpnGw2IP1')]",
            "metadata": {
                "description": "Arbitrary name for public IP1 resource used for the new azure gateway2"
            }
        },
        "gateway2PublicIP2Name": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'vpnGw2IP2')]",
            "metadata": {
                "description": "Arbitrary name for public IP2 resource used for the new azure gateway2"
            }
        },
        "gateway1Name": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'vpnGw1')]",
            "metadata": {
                "description": "Arbitrary name for the new gateway1"
            }
        },
        "gateway2Name": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'vpnGw2')]",
            "metadata": {
                "description": "Arbitrary name for the new gateway2"
            }
        },
        "gatewaySku": {
            "type": "string",
            "defaultValue": "VpnGw2AZ",
            "allowedValues": [
                "VpnGw2AZ",
                "VpnGw3AZ",
                "VpnGw4AZ",
                "VpnGw5AZ"
            ],
            "metadata": {
                "description": "The Sku of the Gateway"
            }
        },
        "vpnGatewayGeneration": {
            "type": "string",
            "defaultValue": "Generation2",
            "allowedValues": [
                "Generation1",
                "Generation2"
            ]
        },
        "asnGtw1": {
            "type": "int",
            "defaultValue": 65001,
            "metadata": {
                "description": "BGP Autonomous System Number of the VPN Gateway1 in VNet1"
            }
        },
        "asnGtw2": {
            "type": "int",
            "defaultValue": 65002,
            "metadata": {
                "description": "BGP Autonomous System Number of the VPN Gateway2 in VNet2"
            }
        },
        "localGatewayName11": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'localGateway11')]",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing VPN gateway1"
            }
        },
        "localGatewayName12": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'localGateway12')]",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing VPN gateway1"
            }
        },
        "localGatewayName21": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'localGateway21')]",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing VPN gateway2"
            }
        },
        "localGatewayName22": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'localGateway22')]",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing VPN gateway2"
            }
        },
        "connectionName11-21": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'gtw1-to-gtw2-pubIP1')]",
            "metadata": {
                "description": "Arbitrary name for the new connection between Azure VNet and other network"
            }
        },
        "connectionName12-22": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'gtw1-to-gtw2-pubIP2')]",
            "metadata": {
                "description": "Arbitrary name for the new connection between Azure VNet and other network"
            }
        },
        "connectionName21-11": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'gtw2-to-gtw1-pubIP1')]",
            "metadata": {
                "description": "Arbitrary name for the new connection between Azure VNet and other network"
            }
        },
        "connectionName22-12": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefix'),'gtw2-to-gtw1-pubIP2')]",
            "metadata": {
                "description": "Arbitrary name for the new connection between Azure VNet and other network"
            }
        },
        "sharedKey": {
            "type": "string",
            "defaultValue": "@@secret@@PSK101**",
            "metadata": {
                "description": "Shared key (PSK) for IPSec tunnel"
            }
        }
    },
    "variables": {
        "location1": "[parameters('location1')]",
        "location2": "[parameters('location2')]",
        "vNet1Name": "[parameters('vNet1Name')]",
        "vNet2Name": "[parameters('vNet2Name')]",
        "gateway1subnetRef": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets',variables('vNet1Name'),'GatewaySubnet') ]",
        "gateway2subnetRef": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets',variables('vNet2Name'),'GatewaySubnet') ]",
        "gateway1Name": "[parameters('gateway1Name')]",
        "gateway2Name": "[parameters('gateway2Name')]",
        "gateway1PublicIP1Name": "[parameters('gateway1PublicIP1Name')]",
        "gateway1PublicIP2Name": "[parameters('gateway1PublicIP2Name')]",
        "gateway2PublicIP1Name": "[parameters('gateway2PublicIP1Name')]",
        "gateway2PublicIP2Name": "[parameters('gateway2PublicIP2Name')]",
        "gateway2PublicIP1Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP1Name'))]",
        "gateway2PublicIP2Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP2Name'))]",
        "gateway1PublicIP1Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name'))]",
        "gateway1PublicIP2Id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP2Name'))]",
        "asnGtw1": "[parameters('asnGtw1')]",
        "asnGtw2": "[parameters('asnGtw2')]",
        "localGatewayName11": "[parameters('localGatewayName11')]",
        "localGatewayName12": "[parameters('localGatewayName12')]",
        "localGatewayName21": "[parameters('localGatewayName21')]",
        "localGatewayName22": "[parameters('localGatewayName22')]",
        "connectionName11-21": "[parameters('connectionName11-21')]",
        "connectionName12-22": "[parameters('connectionName12-22')]",
        "connectionName21-11": "[parameters('connectionName21-11')]",
        "connectionName22-12": "[parameters('connectionName22-12')]",
        "vpnGatewayGeneration": "[parameters('vpnGatewayGeneration')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('gateway1PublicIP1Name')]",
            "apiVersion": "2020-11-01",
            "comments": "public IP of the VPN Gateway1-instance 0",
            "location": "[variables('location1')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "zones": [ "1", "2", "3" ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('gateway1PublicIP2Name')]",
            "apiVersion": "2020-11-01",
            "comments": "public IP of the VPN Gateway1- instance 1",
            "location": "[variables('location1')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "zones": [ "1", "2", "3" ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('gateway2PublicIP1Name')]",
            "apiVersion": "2020-11-01",
            "comments": "public IP of the VPN Gateway2-instance 0",
            "location": "[variables('location2')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "zones": [ "1", "2", "3" ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('gateway2PublicIP2Name')]",
            "apiVersion": "2020-11-01",
            "comments": "public IP of the VPN Gateway2- instance 1",
            "location": "[variables('location2')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "zones": [ "1", "2", "3" ]
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[variables('gateway1Name')]",
            "apiVersion": "2020-11-01",
            "location": "[variables('location1')]",
            "comments": "VPN Gateway1- deployed in location1",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP1Name'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP2Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('gateway1SubnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name'))]"
                            }
                        },
                        "name": "gtw1-config1"
                    },
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('gateway1SubnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP2Name'))]"
                            }
                        },
                        "name": "gtw1-config2"
                    }
                ],
                "sku": {
                    "name": "[parameters('gatewaySku')]",
                    "tier": "[parameters('gatewaySku')]"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": true,
                "activeActive": true,
                "vpnGatewayGeneration": "[variables('vpnGatewayGeneration')]",
                "bgpSettings": {
                    "asn": "[variables('asnGtw1')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[variables('gateway2Name')]",
            "apiVersion": "2020-11-01",
            "location": "[variables('location2')]",
            "comments": "VPN Gateway2- deployed in location2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP1Name'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP2Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('gateway2SubnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP1Name'))]"
                            }
                        },
                        "name": "gtw2-config1"
                    },
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('gateway2SubnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP2Name'))]"
                            }
                        },
                        "name": "gtw2-config2"
                    }
                ],
                "sku": {
                    "name": "[parameters('gatewaySku')]",
                    "tier": "[parameters('gatewaySku')]"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": true,
                "activeActive": true,
                "vpnGatewayGeneration": "[variables('vpnGatewayGeneration')]",
                "bgpSettings": {
                    "asn": "[variables('asnGtw2')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName11')]",
            "apiVersion": "2020-11-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway1Name'))]"
            ],
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": []
                },
                "gatewayIpAddress": "[reference(variables('gateway1PublicIP1Id'),'2020-11-01').ipAddress]",
                "bgpSettings": {
                    "asn": "[variables('asnGtw1')]",
                    "bgpPeeringAddress": "[first(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name')),'2020-11-01').bgpSettings.bgpPeeringAddress , ','))]",
                    "peerWeight": 0
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName12')]",
            "apiVersion": "2020-11-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway1Name'))]"
            ],
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": []
                },
                "gatewayIpAddress": "[reference(variables('gateway1PublicIP2Id'),'2020-11-01').ipAddress]",
                "bgpSettings": {
                    "asn": "[variables('asnGtw1')]",
                    "bgpPeeringAddress": "[last(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name')),'2020-11-01').bgpSettings.bgpPeeringAddress , ','))]",
                    "peerWeight": 0
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName21')]",
            "apiVersion": "2020-11-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway2Name'))]"
            ],
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": []
                },
                "gatewayIpAddress": "[reference(variables('gateway2PublicIP1Id'),'2020-11-01').ipAddress]",
                "bgpSettings": {
                    "asn": "[variables('asnGtw2')]",
                    "bgpPeeringAddress": "[first(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name')),'2020-11-01').bgpSettings.bgpPeeringAddress , ','))]",
                    "peerWeight": 0
                }
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName22')]",
            "apiVersion": "2020-11-01",
            "comments": "public IP of remote IPSec peer",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway2Name'))]"
            ],
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": []
                },
                "gatewayIpAddress": "[reference(variables('gateway2PublicIP2Id'),'2020-11-01').ipAddress]",
                "bgpSettings": {
                    "asn": "[variables('asnGtw2')]",
                    "bgpPeeringAddress": "[last(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name')),'2020-11-01').bgpSettings.bgpPeeringAddress , ','))]",
                    "peerWeight": 0
                }
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName11-21')]",
            "apiVersion": "2020-11-01",
            "comments": "VPN connection between [Gateway1] and [Gateway2-pubIP1]",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway1Name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName21'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName21'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": true
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName12-22')]",
            "apiVersion": "2020-11-01",
            "comments": "VPN connection between [Gateway1] and [Gateway2-pubIP2]",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway1Name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName22'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName22'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": true
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName21-11')]",
            "apiVersion": "2020-11-01",
            "comments": "VPN connection between [Gateway2] and [Gateway1-pubIP1]",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway2Name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName11'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName11'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": true
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[variables('connectionName22-12')]",
            "apiVersion": "2020-11-01",
            "comments": "VPN connection between [Gateway2] and [Gateway1-pubIP2]",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway2Name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName12'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName12'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('sharedKey')]",
                "enableBGP": true
            }
        }
    ]
}