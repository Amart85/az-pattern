{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "mngIP": {
            "type": "string",
            "metadata": {
                "description": "management IP to connect to the VM"
            }
        },
        "location1": {
            "type": "string",
            "metadata": {
                "description": "azure region where is deployed the vnet1"
            }
        },
        "location2": {
            "type": "string",
            "metadata": {
                "description": "azure region where is deployed the vnet2"
            }
        },
        "location3": {
            "type": "string",
            "metadata": {
                "description": "azure region where is deployed the vnet3"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "admin password"
            }
        }
    },
    "variables": {
        "location1": "[parameters('location1')]",
        "location2": "[parameters('location2')]",
        "location3": "[parameters('location3')]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]",
        "vNet1": {
            "location": "[variables('location1')]",
            "name": "vnet1",
            "addressSpacePrefix": "10.0.1.0/24",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.1.0/27",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.1.32/27",
            "subnet3Name": "RouteServerSubnet",
            "subnet3Prefix": "10.0.1.64/27",
            "subnet4Name": "AzureBastionSubnet",
            "subnet4Prefix": "10.0.1.96/27",
            "subnet5Name": "subnet5",
            "subnet5Prefix": "10.0.1.128/26",
            "gatewaySubnetPrefix": "10.0.1.224/27",
            "peeringName": "vnet1-to-vnet3"
        },
        "vNet2": {
            "location": "[variables('location2')]",
            "name": "vnet2",
            "addressSpacePrefix": "10.0.2.0/24",
            "subnetName": "subnet1",
            "subnetPrefix": "10.0.2.0/25",
            "gatewaySubnetPrefix": "10.0.2.224/27",
        },
        "vNet3": {
            "location": "[variables('location3')]",
            "name": "vnet3",
            "addressSpacePrefix": "10.0.3.0/24",
            "subnetName": "subnet1",
            "subnetPrefix": "10.0.3.0/24",
            "peeringName": "vnet3Tovnet1"
        },
        "RT_nva": "RT-nva",
        "nsg1Name": "nsg1",
        "nsg2Name": "nsg2",
        "nsg3Name": "nsg3",
        "availabilitySet1Name": "AvSet1",
        "vmsize": "Standard_B1s",
        "nvarray": [
            {
                "location": "[variables('location1')]",
                "vmName": "nva1",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vNetName": "[variables('vNet1').name]",
                "subnet1Name": "[variables('vNet1').subnet1Name]",
                "subnet2Name": "[variables('vNet1').subnet2Name]",
                "privateIP1": "10.0.1.10",
                "privateIP2": "10.0.1.40",
                "enableIPForwarding": true,
                "acceleratedNetworking": false,
                "availabilitySetName": "[variables('availabilitySet1Name')]",
                "nsgName": "[variables('nsg1Name')]"
            },
            {
                "location": "[variables('location1')]",
                "vmName": "nva2",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vNetName": "[variables('vNet1').name]",
                "subnet1Name": "[variables('vNet1').subnet1Name]",
                "subnet2Name": "[variables('vNet1').subnet2Name]",
                "privateIP1": "10.0.1.11",
                "privateIP2": "10.0.1.41",
                "enableIPForwarding": true,
                "acceleratedNetworking": false,
                "availabilitySetName": "[variables('availabilitySet1Name')]",
                "nsgName": "[variables('nsg1Name')]"
            }
        ],
        "vmarray": [
            {
                "location": "[variables('location1')]",
                "vmName": "vm1",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vNetName": "[variables('vNet1').name]",
                "subnetName": "[variables('vNet1').subnet5Name]",
                "privateIP": "10.0.1.140",
                "enableIPForwarding": false,
                "acceleratedNetworking": false,
                "nsgName": "[variables('nsg1Name')]"
            },
            {
                "location": "[variables('location2')]",
                "vmName": "vm2",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vNetName": "[variables('vNet2').name]",
                "subnetName": "[variables('vNet2').subnetName]",
                "privateIP": "10.0.2.10",
                "enableIPForwarding": false,
                "acceleratedNetworking": false,
                "nsgName": "[variables('nsg2Name')]"
            },
            {
                "location": "[variables('location3')]",
                "vmName": "vm3",
                "vmSize": "[variables('vmSize')]",
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts",
                "version": "latest",
                "vNetName": "[variables('vNet3').name]",
                "subnetName": "[variables('vNet3').subnetName]",
                "privateIP": "10.0.3.10",
                "enableIPForwarding": false,
                "acceleratedNetworking": false,
                "nsgName": "[variables('nsg3Name')]"
            }
        ],
        "nvCount": "[length(variables('nvArray'))]",
        "vmCount": "[length(variables('vmArray'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('RT_nva')]",
            "apiVersion": "2020-11-01",
            "location": "[variables('vNet1').location]",
            "comments": "Routing Table to be applied to the subnet with external interfaces of the nva1, nva2",
            "properties": {
                "routes": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "Internet",
                            "hasBgpOverride": false
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-12-01",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySet1Name')]",
            "location": "[variables('vNet1').location]",
            "comments": "availability set of the NVAs",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsg1Name')]",
            "location": "[variables('vNet1').location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('mngIP')]",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsg2Name')]",
            "location": "[variables('vNet2').location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('mngIP')]",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsg3Name')]",
            "location": "[variables('vNet3').location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-rule",
                        "properties": {
                            "description": "allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('mngIP')]",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet1').name]",
            "location": "[variables('vNet1').location]",
            "comments": "first vNet",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('RT_nva'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet1').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet1').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnet1Prefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('RT_nva'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('vNet1').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnet2Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vNet1').subnet3Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnet3Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vNet1').subnet4Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnet4Prefix]"
                        }
                    },
                    {
                        "name": "[variables('vNet1').subnet5Name]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnet5Prefix]"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').gatewaySubnetPrefix]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet2').name]",
            "location": "[variables('vNet2').location]",
            "comments": "Second vNet",
            "dependsOn": [
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet2').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet2').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vNet2').subnetPrefix]"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[variables('vNet2').gatewaySubnetPrefix]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet3').name]",
            "location": "[variables('vNet3').location]",
            "comments": "This is the third vNet",
            "dependsOn": [],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet3').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet3').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vNet3').subnetPrefix]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(variables('vNet1').name,'/',variables('vNet1').name,'To',variables('vnet3').name)]",
            "location": "[variables('vNet1').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet3').name)]"
            ],
            "comments": "This is the peering from vNet1 to vNet3",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet3').name)]"
                }
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(variables('vNet3').name,'/',variables('vNet3').name,'To',variables('vnet1').name)]",
            "location": "[variables('vNet3').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet3').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1').name)]"
            ],
            "comments": "This is the peering from vNet 3 to vNet 1",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet1').name)]"
                }
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('nvArray')[copyIndex()].vmName,'-pubIP')]",
            "location": "[variables('nvArray')[copyIndex()].location]",
            "comments": "Create Network Virtual Appliance VMs- NOTE: StandardSkuPublicIPAddresses must be Static",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "copy": {
                "name": "publicIpCopy",
                "count": "[variables('nvCount')]"
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('nvArray')[copyIndex()].vmName,'-NIC1' )]",
            "location": "[variables('nvArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('nvArray')[copyIndex()].vmName,'-pubIP' ) )]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('nvArray')[copyIndex()].vNetName)]",
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nvArray')[copyIndex()].nsgName)]"
            ],
            "properties": {
                "primary": true,
                "enableIPForwarding": "[variables('nvArray')[copyIndex()].enableIPForwarding]",
                "enableAcceleratedNetworking": "[variables('nvArray')[copyIndex()].acceleratedNetworking]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('nvArray')[copyIndex()].privateIP1]",
                            "publicIPAddress": {
                                "id": "[resourceId( 'Microsoft.Network/publicIPAddresses',concat( variables('nvArray')[copyIndex()].vmName,'-pubIP' )  )]"
                            },
                            "subnet": {
                                "id": "[resourceId( 'Microsoft.Network/virtualNetworks/subnets', variables('nvArray')[copyIndex()].vNetName, variables('nvArray')[copyIndex()].subnet1Name)]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nvArray')[copyIndex()].nsgName)]"
                }
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('nvCount')]"
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('nvArray')[copyIndex()].vmName,'-NIC2' )]",
            "location": "[variables('nvArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('nvArray')[copyIndex()].vNetName)]"
            ],
            "properties": {
                "primary": true,
                "enableIPForwarding": "[variables('nvArray')[copyIndex()].enableIPForwarding]",
                "enableAcceleratedNetworking": "[variables('nvArray')[copyIndex()].acceleratedNetworking]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('nvArray')[copyIndex()].privateIP2]",
                            "subnet": {
                                "id": "[resourceId( 'Microsoft.Network/virtualNetworks/subnets', variables('nvArray')[copyIndex()].vNetName, variables('nvArray')[copyIndex()].subnet2Name)]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('nvCount')]"
            }
        },
        {
            "apiVersion": "2021-03-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('nvArray')[copyIndex()].vmName]",
            "location": "[variables('nvArray')[copyIndex()].location]",
            "comments": "Create VMs working as NVAs",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nvArray')[copyIndex()].vmName,'-NIC1')  )]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nvArray')[copyIndex()].vmName,'-NIC2')  )]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySet1Name') )]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('nvArray')[copyIndex()].availabilitySetName )]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('nvArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('nvArray')[copyIndex()].vmName]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('nvArray')[copyIndex()].publisher]",
                        "offer": "[variables('nvArray')[copyIndex()].offer]",
                        "sku": "[variables('nvArray')[copyIndex()].sku]",
                        "version": "[variables('nvArray')[copyIndex()].version]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(variables('nvArray')[copyIndex()].vmName,'-OsDisk')]"
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('nvArray')[copyIndex()].vmName,'-NIC1' )  )]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('nvArray')[copyIndex()].vmName,'-NIC2' )  )]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            },
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('nvCount')]"
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName)]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vmArray')[copyIndex()].vNetName)]"
            ],
            "properties": {
                "primary": true,
                "enableIPForwarding": "[variables('vmArray')[copyIndex()].enableIPForwarding]",
                "enableAcceleratedNetworking": "[variables('vmArray')[copyIndex()].acceleratedNetworking]",
                "ipConfigurations": [
                    {
                        "name": "ipcfg1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('vmArray')[copyIndex()].privateIP]",
                            "subnet": {
                                "id": "[resourceId(  'Microsoft.Network/virtualNetworks/subnets', variables('vmArray')[copyIndex()].vNetName, variables('vmArray')[copyIndex()].subnetName)]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmArray')[copyIndex()].nsgName)]"
                }
            },
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            }
        },
        {
            "apiVersion": "2021-03-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmArray')[copyIndex()].vmName]",
            "location": "[variables('vmArray')[copyIndex()].location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmArray')[copyIndex()].vmName,'-NIC')  )]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmArray')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('vmArray')[copyIndex()].vmName]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmArray')[copyIndex()].publisher]",
                        "offer": "[variables('vmArray')[copyIndex()].offer]",
                        "sku": "[variables('vmArray')[copyIndex()].sku]",
                        "version": "[variables('vmArray')[copyIndex()].version]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(variables('vmArray')[copyIndex()].vmName,'-OsDisk')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('vmArray')[copyIndex()].vmName,'-NIC' )  )]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "nodeCopy",
                "count": "[variables('vmCount')]"
            }
        }
    ]
}